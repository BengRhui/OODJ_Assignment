/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.admin;

import backend.entity.Address;
import backend.entity.Customer;
import backend.entity.Stall;
import backend.entity.Vendor;
import backend.utility.Utility;
import frontend.pop_up.SystemPopUp;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;

/**
 *
 * @author Chun Ming (TP068983), Beng Rhui (TP068495)
 */
public class CustomerDetailsForm extends javax.swing.JFrame {

    private Customer currentCustomer;
    
    /**
     * Creates new form VendorDetailsForm
     */
    public CustomerDetailsForm(Customer customer) {
        
        // Save the current vendor
        currentCustomer = customer;
        
        // Render the GUI
        initComponents();
        
        // Initialize text if vendor detail is meant to be edited
        if (customer != null) initializeLabel();
        
    }

    private void initializeLabel() {
        
        // Retrieve the attributes of the current vendor
        String customerID = currentCustomer.getUserID();
        String customerName = currentCustomer.getName();
        String contactNumber = currentCustomer.getContactNumber();
        String addressLine1 = currentCustomer.getAddress().getAddressLine1();
        String addressLine2 = currentCustomer.getAddress().getAddressLine2();
        String postcode = currentCustomer.getAddress().getPostcode();
        String city = currentCustomer.getAddress().getCity();
        String state = currentCustomer.getAddress().getState().toString();
        String email = currentCustomer.getEmail();
        String password = currentCustomer.getPassword();
        String confirmPassword = currentCustomer.getPassword();
        
        // Set the values to the text fields
        customerIDField.setText(customerID);
        customerNameField.setText(customerName);
        contactNumberField.setText(contactNumber);
        addressLineOneField.setText(addressLine1);
        addressLineTwoField.setText(addressLine2);
        postcodeField.setText(postcode);
        cityField.setText(city);
        stateField.setSelectedItem(state);
        emailField.setText(email);
        passwordField.setText(password);
        confirmPasswordField.setText(confirmPassword);
        
        // Change the text colour and echo char
        customerIDField.setForeground(Color.BLACK);
        customerNameField.setForeground(Color.BLACK);
        contactNumberField.setForeground(Color.BLACK);
        addressLineOneField.setForeground(Color.BLACK);
        addressLineTwoField.setForeground(Color.BLACK);
        postcodeField.setForeground(Color.BLACK);
        cityField.setForeground(Color.BLACK);
        stateField.setForeground(Color.BLACK);
        emailField.setForeground(Color.BLACK);
        passwordField.setForeground(Color.BLACK);
        confirmPasswordField.setForeground(Color.BLACK);
        
        passwordField.setEchoChar('•');
        confirmPasswordField.setEchoChar('•');
        
        // Disable the password field (only can be changed at the reset password page)
        passwordField.setEditable(false);
        passwordField.setFocusable(false);
        passwordField.setBackground(Color.WHITE);
        
        confirmPasswordField.setEditable(false);
        confirmPasswordField.setFocusable(false);
        confirmPasswordField.setBackground(Color.WHITE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        customerDetailsTitle = new javax.swing.JLabel();
        customerIDTitle = new javax.swing.JLabel();
        customerIDField = new javax.swing.JTextField();
        customerNameTitle = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        contactNumberTitle = new javax.swing.JLabel();
        contactNumberField = new javax.swing.JTextField();
        deliveryAddressTitle = new javax.swing.JLabel();
        addressLineOneField = new javax.swing.JTextField();
        addressLineTwoField = new javax.swing.JTextField();
        cityField = new javax.swing.JTextField();
        postcodeField = new javax.swing.JTextField();
        stateField = new javax.swing.JComboBox<>(
            Address.State.STATE_OPTIONS
        );
        emailTitle = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        passwordTitle = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordTitle = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        note = new javax.swing.JLabel();
        note1 = new javax.swing.JLabel();
        note2 = new javax.swing.JLabel();
        note3 = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 251, 233));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerDetailsTitle.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        customerDetailsTitle.setText("Customer Details");
        jPanel1.add(customerDetailsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        customerIDTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        customerIDTitle.setText("Customer ID");
        jPanel1.add(customerIDTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, -1, -1));

        customerIDField.setEditable(false);
        customerIDField.setBackground(new java.awt.Color(255, 255, 255));
        customerIDField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customerIDField.setText(Customer.generateNewID());
        customerIDField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        customerIDField.setFocusable(false);
        jPanel1.add(customerIDField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 160, 50));

        customerNameTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        customerNameTitle.setText("Customer Name");
        jPanel1.add(customerNameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 220, -1));

        customerNameField.setBackground(new java.awt.Color(255, 255, 255));
        customerNameField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        customerNameField.setForeground(new java.awt.Color(204, 204, 204));
        customerNameField.setText("Enter Name Here");
        customerNameField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        customerNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                customerNameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                customerNameFieldFocusLost(evt);
            }
        });
        jPanel1.add(customerNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 350, 50));

        contactNumberTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        contactNumberTitle.setText("Contact Number");
        jPanel1.add(contactNumberTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        contactNumberField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        contactNumberField.setForeground(new java.awt.Color(204, 204, 204));
        contactNumberField.setText("Contact Number Here (e.g. 012-3456789)");
        contactNumberField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        contactNumberField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactNumberFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactNumberFieldFocusLost(evt);
            }
        });
        jPanel1.add(contactNumberField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 520, 50));

        deliveryAddressTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        deliveryAddressTitle.setText("Delivery Address");
        jPanel1.add(deliveryAddressTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, -1));

        addressLineOneField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addressLineOneField.setForeground(new java.awt.Color(204, 204, 204));
        addressLineOneField.setText("Address Line 1");
        addressLineOneField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        addressLineOneField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressLineOneFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressLineOneFieldFocusLost(evt);
            }
        });
        jPanel1.add(addressLineOneField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 520, 50));

        addressLineTwoField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addressLineTwoField.setForeground(new java.awt.Color(204, 204, 204));
        addressLineTwoField.setText("Address Line 2");
        addressLineTwoField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        addressLineTwoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressLineTwoFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressLineTwoFieldFocusLost(evt);
            }
        });
        jPanel1.add(addressLineTwoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 520, 50));

        cityField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cityField.setForeground(new java.awt.Color(204, 204, 204));
        cityField.setText("City");
        cityField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        cityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cityFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cityFieldFocusLost(evt);
            }
        });
        jPanel1.add(cityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 340, 50));

        postcodeField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        postcodeField.setForeground(new java.awt.Color(204, 204, 204));
        postcodeField.setText("Postcode");
        postcodeField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        postcodeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                postcodeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                postcodeFieldFocusLost(evt);
            }
        });
        jPanel1.add(postcodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 170, 50));

        stateField.setBackground(Color.WHITE);
        stateField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        stateField.setForeground(new java.awt.Color(204, 204, 204));
        stateField.setSelectedIndex(-1);
        stateField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        stateField.setFocusable(false);
        stateField.setOpaque(true);
        stateField.setRenderer(new DefaultListCellRenderer() {

            // Override the rendering method
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {

                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                if (index == -1 && value == null) {
                    label.setText("Select State Here");
                    label.setForeground(new Color(204, 204, 204));
                } else {
                    label.setForeground(Color.BLACK);
                }

                // Apply your existing custom rendering (size and border)
                label.setPreferredSize(new Dimension(label.getPreferredSize().width, 40));
                label.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));

                return label;
            }
        });
        stateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateFieldActionPerformed(evt);
            }
        });
        jPanel1.add(stateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, 520, 50));

        emailTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        emailTitle.setText("Email");
        jPanel1.add(emailTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, -1, -1));

        emailField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        emailField.setForeground(new java.awt.Color(204, 204, 204));
        emailField.setText("Enter Email Here");
        emailField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        emailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFieldFocusLost(evt);
            }
        });
        jPanel1.add(emailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 520, 50));

        passwordTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        passwordTitle.setText("Password");
        jPanel1.add(passwordTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, -1, -1));

        passwordField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        passwordField.setForeground(new java.awt.Color(204, 204, 204));
        passwordField.setText("Enter Password Here");
        passwordField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        passwordField.setEchoChar((char) 0);
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFieldFocusLost(evt);
            }
        });
        jPanel1.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 520, 50));

        confirmPasswordTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        confirmPasswordTitle.setText("Confirm Password");
        jPanel1.add(confirmPasswordTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, -1, -1));

        confirmPasswordField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        confirmPasswordField.setForeground(new java.awt.Color(204, 204, 204));
        confirmPasswordField.setText("Retype Password Here");
        confirmPasswordField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        confirmPasswordField.setEchoChar((char) 0);
        confirmPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPasswordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPasswordFieldFocusLost(evt);
            }
        });
        jPanel1.add(confirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 410, 520, 50));

        note.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        note.setText(" •  Password should have at least one special characters (#, @, $, etc.)");
        jPanel1.add(note, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 530, 510, 40));

        note1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        note1.setText("<html><b>Note:</b>");
        note1.setToolTipText("");
        jPanel1.add(note1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, 60, 30));

        note2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        note2.setText(" •  Password should consist of 8 to 20 characters");
        jPanel1.add(note2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 490, 360, 40));

        note3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        note3.setText(" •  Password should have at least one number and one alphabet");
        jPanel1.add(note3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 510, 500, 40));

        confirmButton.setBackground(new java.awt.Color(0, 0, 0));
        confirmButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("Confirm");
        confirmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        confirmButton.setFocusPainted(false);
        confirmButton.setOpaque(true);
        confirmButton.setPreferredSize(new java.awt.Dimension(200, 50));
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmButtonMouseExited(evt);
            }
        });
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel1.add(confirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 590, -1, -1));

        cancelButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        cancelButton.setFocusPainted(false);
        cancelButton.setOpaque(true);
        cancelButton.setPreferredSize(new java.awt.Dimension(200, 50));
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 590, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered

        // Change cursor and set background
        cancelButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        cancelButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited

        // Change cursor and set background
        cancelButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        cancelButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_cancelButtonMouseExited

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
        // Enable the parent frame
        MainPage.currentFrame.setEnabled(true);
        
        // Dispose the current pop up
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void confirmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseEntered

        // Change cursor and set background and foreground
        confirmButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        confirmButton.setBackground(new Color(206, 171, 147));
        confirmButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_confirmButtonMouseEntered

    private void confirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseExited

        // Change cursor and set background and foreground
        confirmButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        confirmButton.setBackground(Color.BLACK);
        confirmButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_confirmButtonMouseExited

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed

        // Retrieve the relevant information
        String customerID = customerIDField.getText();
        String customerName = customerNameField.getText().strip();
        String contactNumber = contactNumberField.getText().strip();
        String addressLine1 = addressLineOneField.getText().strip();
        String addressLine2 = addressLineTwoField.getText().strip();
        String postcode = postcodeField.getText().strip();
        String city = cityField.getText().strip();
        String state = stateField.getSelectedItem() == null ? null : stateField.getSelectedItem().toString();
        String email = emailField.getText().strip().toLowerCase();
        char[] password = passwordField.getPassword();
        char[] confirmPassword = confirmPasswordField.getPassword();
        
        // A variable to store the status of the operation
        int status;
        
        // Add customer
        if (currentCustomer == null) {
        
            // Try to create a new customer
            status = Customer.createNewCustomer(
                    customerID,
                    customerName,
                    contactNumber,
                    addressLine1,
                    addressLine2,
                    postcode,
                    state,
                    city,
                    email,
                    password,
                    confirmPassword
            );
            
        } else {
            
            // Modify the existing vendor
            status = currentCustomer.modifyCustomer(
                    customerName,
                    contactNumber,
                    addressLine1,
                    addressLine2,
                    postcode,
                    state,
                    city,
                    email,
                    password,
                    confirmPassword
            );
        }
        
        // Create an empty string to store error message
        String errorMessage = null;
        
        // Generate different error messages
        switch (status) {
            case 0 -> errorMessage = "No empty inputs are allowed. Please make sure that you fill in all the information.";
            case -1 -> errorMessage = "Your email is not in the correct format. Please try again.";
            case -2 -> errorMessage = "Your email has been used by another user. Please try another email.";
            case -3 -> errorMessage = "Your password does not meet the requirement. Please use another password.";
            case -4 -> errorMessage = "Both passwords do not match. Please try again.";
            case -5 -> errorMessage = "The contact number is not in the correct format. Please try again.";
            case -6 -> errorMessage = "Unable to generate notification for the customer. Please inspect code.";
        }
        
        // If there is no error message (vendor created / modified successfully)
        if (errorMessage == null) {
            
            // Generate title and description for the notification
            String successTitle = currentCustomer == null ? 
                    "Account Created Successfully" : 
                    "Information Updated Successfully";
            
            String successMessage = currentCustomer == null ? 
                    "The customer account has been created successfully." : 
                    "The customer information is updated successfully";

            // Display a message to indicate success
            SystemPopUp successCreation = new SystemPopUp(
                    MainPage.currentFrame,
                    successTitle,
                    successMessage,
                    new String[]{"OK"}
            );
            successCreation.setVisible(true);
            
            // Refresh the panel
            UserListPanel.updatePanel();
            
            // Dispose the current form
            dispose();
            
            // Enable the user page
            MainPage.currentFrame.setEnabled(true);
            
        } else {
        
            // Create a message to indicate failure in creation / modification
            SystemPopUp failToCreate = new SystemPopUp(
                    MainPage.currentFrame,
                    "Error",
                    errorMessage,
                    new String[]{"OK"}
            );
            failToCreate.setVisible(true);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void customerNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customerNameFieldFocusGained

        // If the text is enter name here
        if (customerNameField.getText().equals("Enter Name Here")) {
            
            // Clear the prompt
            customerNameField.setText("");
            
            // Set the text colour to black
            customerNameField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_customerNameFieldFocusGained

    private void customerNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customerNameFieldFocusLost

        // If the text is empty
        if (customerNameField.getText().isBlank()) {
        
            // Add the prompt
            customerNameField.setText("Enter Name Here");
            
            // Set the text colour to grey
            customerNameField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_customerNameFieldFocusLost

    private void contactNumberFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactNumberFieldFocusGained

        // If the text is contact number here
        if (contactNumberField.getText().equals("Contact Number Here (e.g. 012-3456789)")) {
            
            // Clear the prompt
            contactNumberField.setText("");
            
            // Set the text colour to black
            contactNumberField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_contactNumberFieldFocusGained

    private void contactNumberFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactNumberFieldFocusLost

        // If the text is empty
        if (contactNumberField.getText().isBlank()) {
        
            // Add the prompt
            contactNumberField.setText("Contact Number Here (e.g. 012-3456789)");
            
            // Set the text colour to grey
            contactNumberField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_contactNumberFieldFocusLost

    private void addressLineOneFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressLineOneFieldFocusGained

        // If the text is address line 1
        if (addressLineOneField.getText().equals("Address Line 1")) {
            
            // Clear the prompt
            addressLineOneField.setText("");
            
            // Set the text colour to black
            addressLineOneField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_addressLineOneFieldFocusGained

    private void addressLineOneFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressLineOneFieldFocusLost

        // If the text is empty
        if (addressLineOneField.getText().isBlank()) {
        
            // Add the prompt
            addressLineOneField.setText("Address Line 1");
            
            // Set the text colour to grey
            addressLineOneField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_addressLineOneFieldFocusLost

    private void addressLineTwoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressLineTwoFieldFocusGained

        // If the text is address line 2
        if (addressLineTwoField.getText().equals("Address Line 2")) {
            
            // Clear the prompt
            addressLineTwoField.setText("");
            
            // Set the text colour to black
            addressLineTwoField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_addressLineTwoFieldFocusGained

    private void addressLineTwoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressLineTwoFieldFocusLost

        // If the text is empty
        if (addressLineTwoField.getText().isBlank()) {
        
            // Add the prompt
            addressLineTwoField.setText("Address Line 2");
            
            // Set the text colour to grey
            addressLineTwoField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_addressLineTwoFieldFocusLost

    private void postcodeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postcodeFieldFocusGained

        // If the text is postcode
        if (postcodeField.getText().equals("Postcode")) {
            
            // Clear the prompt
            postcodeField.setText("");
            
            // Set the text colour to black
            postcodeField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_postcodeFieldFocusGained

    private void postcodeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postcodeFieldFocusLost

        // If the text is empty
        if (postcodeField.getText().isBlank()) {
        
            // Add the prompt
            postcodeField.setText("Postcode");
            
            // Set the text colour to grey
            postcodeField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_postcodeFieldFocusLost

    private void cityFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityFieldFocusGained

        // If the text is enter name here
        if (cityField.getText().equals("City")) {
            
            // Clear the prompt
            cityField.setText("");
            
            // Set the text colour to black
            cityField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_cityFieldFocusGained

    private void cityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityFieldFocusLost

        // If the text is empty
        if (cityField.getText().isBlank()) {
        
            // Add the prompt
            cityField.setText("City");
            
            // Set the text colour to grey
            cityField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_cityFieldFocusLost

    private void stateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateFieldActionPerformed

        // Change the text colour to black
        stateField.setForeground(Color.BLACK);
    }//GEN-LAST:event_stateFieldActionPerformed

    private void emailFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusGained
        
        // If the text is enter email here
        if (emailField.getText().equals("Enter Email Here")) {
            
            // Clear the prompt
            emailField.setText("");
            
            // Set the text colour to black
            emailField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_emailFieldFocusGained

    private void emailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusLost

        // If the text is empty
        if (emailField.getText().isBlank()) {
        
            // Add the prompt
            emailField.setText("Enter Email Here");
            
            // Set the text colour to grey
            emailField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_emailFieldFocusLost

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained

        // If the text is enter password here
        if (Utility.generateString(passwordField.getPassword()).equals("Enter Password Here")) {
            
            // Clear the prompt
            passwordField.setText("");
            
            // Set the text colour to black
            passwordField.setForeground(Color.BLACK);
            
            // Set the echo char to dot
            passwordField.setEchoChar('•');
        }
    }//GEN-LAST:event_passwordFieldFocusGained

    private void passwordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusLost

        // If the password is empty
        if (passwordField.getPassword().length == 0) {
        
            // Add the prompt
            passwordField.setText("Enter Password Here");
            
            // Set the text colour to grey
            passwordField.setForeground(new Color(204, 204, 204));
            
            // Set echo char to normal character
            passwordField.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_passwordFieldFocusLost

    private void confirmPasswordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFieldFocusGained

        // If the text is enter password here
        if (Utility.generateString(confirmPasswordField.getPassword()).equals("Retype Password Here")) {
            
            // Clear the prompt
            confirmPasswordField.setText("");
            
            // Set the text colour to black
            confirmPasswordField.setForeground(Color.BLACK);
            
            // Set the echo char to dot
            confirmPasswordField.setEchoChar('•');
        }
    }//GEN-LAST:event_confirmPasswordFieldFocusGained

    private void confirmPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFieldFocusLost

        // If the password is empty
        if (confirmPasswordField.getPassword().length == 0) {
        
            // Add the prompt
            confirmPasswordField.setText("Retype Password Here");
            
            // Set the text colour to grey
            confirmPasswordField.setForeground(new Color(204, 204, 204));
            
            // Set echo char to normal character
            confirmPasswordField.setEchoChar((char) 0);
        }
    }//GEN-LAST:event_confirmPasswordFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerDetailsForm(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressLineOneField;
    private javax.swing.JTextField addressLineTwoField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cityField;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordTitle;
    private javax.swing.JTextField contactNumberField;
    private javax.swing.JLabel contactNumberTitle;
    private javax.swing.JLabel customerDetailsTitle;
    private javax.swing.JTextField customerIDField;
    private javax.swing.JLabel customerIDTitle;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameTitle;
    private javax.swing.JLabel deliveryAddressTitle;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel note;
    private javax.swing.JLabel note1;
    private javax.swing.JLabel note2;
    private javax.swing.JLabel note3;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordTitle;
    private javax.swing.JTextField postcodeField;
    private javax.swing.JComboBox<String> stateField;
    // End of variables declaration//GEN-END:variables
}
