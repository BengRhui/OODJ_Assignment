/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.admin;

import backend.entity.Stall;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Chun Ming (TP068983), Beng Rhui (TP068495)
 */
public class StallListPanel extends javax.swing.JPanel {

    private static ArrayList<Stall> stallList;
    
    /**
     * Creates new form StallListPanel
     */
    public StallListPanel() {
        
        // Render GUI components
        initComponents();
        
        // Generate the panels
        updatePanel();
    }
    
    public static void updatePanel() {
        
        // Clear the current panel
        stallPanel.removeAll();
        
        // Retrieve the entire list of stall
        stallList = Stall.getStallList();
        
        // Loop through each stall
        for (Stall stall : stallList) {
            
            // Create the corresponding stall details panel
            JPanel stallDetails = new StallDetailsPanel(stall);
            
            // Add the individual panel to the container
            stallPanel.add(stallDetails);
        }
        
        // If there is no user, 
        if (stallList.isEmpty()) {
        
            // Create a new panel and set layout to nukk
            JPanel emptyPanel = new JPanel(null);
            emptyPanel.setBackground(new Color(255, 251, 233));
            
            // Generate a empty label to indicate that no user exists
            JLabel emptyLabel = new JLabel("No stall exists in the system.");
            emptyLabel.setFont(new Font("Arial", Font.PLAIN, 24));
            emptyLabel.setBounds(0, 0, 350, 30);
            
            // Add the label to the container
            emptyPanel.add(emptyLabel);
            stallPanel.add(emptyPanel);
            
        } else if (stallList.size() < 4) {
        
            // Start a loop to create empty panels to be placed inside the grid layout
            for (int i = stallList.size() + 1; i < 7; i ++) {
                
                // Create the empty panel
                JPanel emptyPanel = new JPanel();
                emptyPanel.setBackground(new Color(255, 251, 233));
                
                // Add the empty panel to the container
                stallPanel.add(emptyPanel);
            }
        }
        
        // Refresh the pane after all actions
        stallPanel.revalidate();
        stallPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitle = new javax.swing.JLabel();
        stallPanelScrollPane = new javax.swing.JScrollPane();
        stallPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 251, 233));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        panelTitle.setText("Stall List");
        add(panelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        stallPanelScrollPane.setBackground(new java.awt.Color(255, 251, 233));
        stallPanelScrollPane.setBorder(null);

        stallPanel.setBackground(new java.awt.Color(255, 251, 233));
        stallPanel.setLayout(new java.awt.GridLayout(0, 3, 10, 10));
        stallPanelScrollPane.setViewportView(stallPanel);

        add(stallPanelScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 1220, 510));

        backButton.setBackground(Color.WHITE);
        backButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.setFocusPainted(false);
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 680, 170, 60));

        registerButton.setBackground(new java.awt.Color(0, 0, 0));
        registerButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("+ Add New Stall");
        registerButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        registerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerButton.setFocusPainted(false);
        registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerButtonMouseExited(evt);
            }
        });
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 680, 280, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseEntered

        // Change the colour of the button
        registerButton.setBackground(new Color(206, 171, 147));

        // Change the text colour of the button
        registerButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_registerButtonMouseEntered

    private void registerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseExited

        // Change the colour of the button
        registerButton.setBackground(Color.BLACK);

        // Change the text colour of the button
        registerButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_registerButtonMouseExited

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed

        // Call pop up to create store
        StallInformationForm createStall = new StallInformationForm(null);
        createStall.setVisible(true);
        createStall.setLocationRelativeTo(MainPage.currentFrame);

        // Disable the current frame
        MainPage.currentFrame.setEnabled(false);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered

        // Change the colour of the button
        backButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited

        // Change the colour of the button
        backButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_backButtonMouseExited

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        // Return to main page
        MainPage.setCard("actionPanel");
    }//GEN-LAST:event_backButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JButton registerButton;
    private static javax.swing.JPanel stallPanel;
    private javax.swing.JScrollPane stallPanelScrollPane;
    // End of variables declaration//GEN-END:variables
}
