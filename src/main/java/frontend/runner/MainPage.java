/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.runner;

import backend.entity.DeliveryRunner;
import backend.entity.Order;
import frontend.home_page.HomePage;
import frontend.pop_up.FeedbackPopUp;
import frontend.pop_up.NotificationPopUp;
import frontend.pop_up.SystemPopUp;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import javax.swing.JFrame;

/**
 *
 * @author Jun Hong (TP068580), Beng Rhui (TP068495)
 */
public class MainPage extends javax.swing.JFrame {

    public static JFrame currentFrame;
    private static DeliveryRunner currentRunner;
    private static String currentCard;
    
    /**
     * Creates new form RunnerMainPage
     */
    public MainPage() {

        // Set the current frame
        currentFrame = this;
        
        // A temporary variable for development purpose
        currentRunner = new DeliveryRunner("R001", "abc@123.com", "Abcd@1234", "Jun Hong", "012-3456779");
        initComponents();
        
        // Get the order that is associated with the runner currently (only one)
        Order currentOrder = currentRunner.retrieveCurrentAssociatedOrder();
        
        // Add cards into the current frame
        HomePagePanel homePagePanel = new HomePagePanel();
        DeliveryHistoryPanel deliveryHistoryPanel = new DeliveryHistoryPanel();
        
        cardPanel.add(homePagePanel, "homePagePanel");
        cardPanel.add(deliveryHistoryPanel, "deliveryHistoryPanel");
        
        // Display home page as default
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardLayout.show(cardPanel, "homePagePanel");
        currentCard = "homePagePanel";
    }
    
    /**
     * This method is to let other frames to bring in the delivery runner information.
     * @param runner The delivery runner object retrieved via login
     */
    public static void setRunner(DeliveryRunner runner) {
        currentRunner = runner;
    }
    
    /**
     * This method is to let other frames to retrieve the current delivery runner.
     * @return The vendor object that is logged into the system
     */
    public static DeliveryRunner getRunner() {
        return currentRunner;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        basePanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                g.setColor(getBackground());
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        }
        ;
        headerPanel = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        logoPictureLabel = new javax.swing.JLabel();
        homePageLabel = new javax.swing.JLabel();
        deliveryHistoryLabel = new javax.swing.JLabel();
        feedbackIcon = new javax.swing.JLabel();
        notificationIcon = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        runnerBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Food Court System");
        setMinimumSize(new java.awt.Dimension(1400, 800));
        setName("vendorMainFrame"); // NOI18N
        setSize(new java.awt.Dimension(1400, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        basePanel.setBackground(new java.awt.Color(0, 0, 0, 150));
        basePanel.setOpaque(false);
        basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new Color(0, 0, 0, 0));
        headerPanel.setOpaque(false);
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logo_light_without_text.png"))); // NOI18N
        headerPanel.add(logoPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        homePageLabel.setBackground(new Color(0, 0, 0, 0));
        homePageLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        homePageLabel.setForeground(new java.awt.Color(255, 255, 255));
        homePageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePageLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homePageLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homePageLabelMouseExited(evt);
            }
        });
        headerPanel.add(homePageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 140, 30));

        deliveryHistoryLabel.setBackground(new Color(0, 0, 0, 0));
        deliveryHistoryLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        deliveryHistoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        deliveryHistoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deliveryHistoryLabel.setText("Delivery History");
        deliveryHistoryLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryHistoryLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deliveryHistoryLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deliveryHistoryLabelMouseExited(evt);
            }
        });
        headerPanel.add(deliveryHistoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 210, 30));

        feedbackIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/feedback_icon.png"))); // NOI18N
        feedbackIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                feedbackIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                feedbackIconMouseExited(evt);
            }
        });
        headerPanel.add(feedbackIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 40, 70, 70));

        notificationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/notification_icon.png"))); // NOI18N
        notificationIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                notificationIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                notificationIconMouseExited(evt);
            }
        });
        headerPanel.add(notificationIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 50, -1, -1));

        logoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logout_icon.png"))); // NOI18N
        logoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutIconMouseExited(evt);
            }
        });
        headerPanel.add(logoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 50, 60, 60));

        basePanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 150));

        cardPanel.setBackground(new Color(0, 0, 0, 0));
        cardPanel.setOpaque(false);
        cardPanel.setLayout(new java.awt.CardLayout());
        basePanel.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1400, 650));

        backgroundPanel.add(basePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        runnerBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/runner_background.png"))); // NOI18N
        runnerBackground.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        runnerBackground.setOpaque(true);
        backgroundPanel.add(runnerBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 150));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseClicked
        
        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to item listing card
        cardLayout.show(cardPanel, "homePagePanel");
        currentCard = "homePagePanel";
        
        // Change formatting for the text
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));
        
        deliveryHistoryLabel.setText("Delivery History");
        deliveryHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_homePageLabelMouseClicked

    private void deliveryHistoryLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryHistoryLabelMouseClicked

                // cardPanel.add(homePagePanel, "homePagePanel");
        // cardPanel.add(deliveryHistoryPanel, "deliveryHistoryPanel");
        
        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to item listing card
        cardLayout.show(cardPanel, "deliveryHistoryPanel");
        currentCard = "deliveryHistoryPanel";
        
        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        deliveryHistoryLabel.setText("<html><u>Delivery History</u></html>");
        deliveryHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));
    }//GEN-LAST:event_deliveryHistoryLabelMouseClicked

    private void homePageLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseEntered
        
        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePagePanel")) {
            
            // Bold the text
            homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseEntered

    private void homePageLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseExited

        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePagePanel")) {
            
            // Reset the text
            homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseExited

    private void deliveryHistoryLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryHistoryLabelMouseEntered

        // Set cursor
        deliveryHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("deliveryHistoryPanel")) {
            
            // Bold the text
            deliveryHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_deliveryHistoryLabelMouseEntered

    private void deliveryHistoryLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryHistoryLabelMouseExited

        // Set cursor
        deliveryHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("deliveryHistoryPanel")) {
            
            // Reset the text
            deliveryHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_deliveryHistoryLabelMouseExited

    private void notificationIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseEntered

        // Set cursor
        notificationIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_notificationIconMouseEntered

    private void notificationIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseExited

        // Set cursor
        notificationIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_notificationIconMouseExited

    private void logoutIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseEntered

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_logoutIconMouseEntered

    private void logoutIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseExited

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_logoutIconMouseExited

    private void notificationIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseClicked

        // Call the notification frame
        NotificationPopUp vendorNotification = new NotificationPopUp(currentRunner);
        vendorNotification.setVisible(true);
        vendorNotification.setLocationRelativeTo(this);
    }//GEN-LAST:event_notificationIconMouseClicked

    private void logoutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseClicked

        // Display a messsage to confirm logout
        SystemPopUp logoutConfirmation = new SystemPopUp(
                this,
                "Logout from System",
                "Are you sure you wish to logout from the system?",
                new String[]{"No", "Yes"}
        );
        logoutConfirmation.setVisible(true);
        
        // Get the status of the notification
        int status = logoutConfirmation.getStatus();
        
        // If "Yes" is chosen
        if (status == 1) {
            
            // Display a message to indicate that logout is successful
            SystemPopUp successLogout = new SystemPopUp(
                this,
                "Logout Success",
                "Thank you for using the system!",
                new String[]{"OK"}
            );
            successLogout.setVisible(true);
            
            // Redirect users to home page
            HomePage homePage = new HomePage();
            homePage.setVisible(true);
            homePage.setLocationRelativeTo(this);
            
            // Dispose the current frame
            dispose();

            // Set the runner instance to null (to avoid any errors when login again)
            setRunner(null);
        }
    }//GEN-LAST:event_logoutIconMouseClicked

    private void feedbackIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackIconMouseEntered

        // Set cursor
        feedbackIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_feedbackIconMouseEntered

    private void feedbackIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackIconMouseExited

        // Set cursor
        feedbackIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_feedbackIconMouseExited

    private void feedbackIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackIconMouseClicked

        // Display the customer feedback pop up
        FeedbackPopUp runnerFeedback = new FeedbackPopUp(currentRunner);
        runnerFeedback.setVisible(true);
        runnerFeedback.setLocationRelativeTo(this);
    }//GEN-LAST:event_feedbackIconMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        // Display a messsage to confirm logout
        SystemPopUp logoutConfirmation = new SystemPopUp(
                this,
                "Logout from System",
                "Are you sure you wish to logout from the system?",
                new String[]{"No", "Yes"}
        );
        logoutConfirmation.setVisible(true);
        
        // Get the status of the notification
        int status = logoutConfirmation.getStatus();
        
        // If "Yes" is chosen
        if (status == 1) {
            
            // Display a message to indicate that logout is successful
            SystemPopUp successLogout = new SystemPopUp(
                this,
                "Logout Success",
                "Thank you for using the system!",
                new String[]{"OK"}
            );
            successLogout.setVisible(true);
            
            // Redirect users to home page
            HomePage homePage = new HomePage();
            homePage.setVisible(true);
            homePage.setLocationRelativeTo(this);
            
            // Dispose the current frame
            dispose();

            // Set the runner instance to null (to avoid any errors when login again)
            setRunner(null);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel backgroundPanel;
    private static javax.swing.JPanel basePanel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel deliveryHistoryLabel;
    private javax.swing.JLabel feedbackIcon;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel homePageLabel;
    private javax.swing.JLabel logoPictureLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel notificationIcon;
    private static javax.swing.JLabel runnerBackground;
    // End of variables declaration//GEN-END:variables
}
