/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.customer;

import backend.entity.Customer;
import frontend.home_page.HomePage;
import frontend.pop_up.NotificationPopUp;
import frontend.pop_up.SystemPopUp;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author limbengrhui
 */
public class MainPage extends javax.swing.JFrame {

    public static JFrame currentFrame;
    public static JPanel currentCardPanel;
    private static String currentCard;
    private static Customer currentCustomer;
    private static ArrayList<JPanel> additionalPanels;
    
    /**
     * Creates new form CustomerMainPage
     */
    public MainPage() {
        
        // Render GUI components
        initComponents();
        
        // A temporary customer object for testing purpose (should be deleted later)
        currentCustomer = Customer.getCustomerList().getFirst();
        
        // Set the current frame and card panel, and declare map to store additional panels
        currentFrame = this;
        currentCardPanel = cardPanel;
        additionalPanels = new ArrayList<>();
        
        // Add cards into the current frame
        HomePanel homePanel = new HomePanel();
        OrderHistoryPanel orderHistoryPanel = new OrderHistoryPanel();
        EWalletPanel eWalletPanel = new EWalletPanel();
        FeedbackPanel feedbackPanel = new FeedbackPanel();
        
        cardPanel.add(homePanel, "homePanel");
        cardPanel.add(orderHistoryPanel, "orderHistoryPanel");
        cardPanel.add(eWalletPanel, "eWalletPanel");
        cardPanel.add(feedbackPanel, "feedbackPanel");
        
        // Display home page as default
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardLayout.show(cardPanel, "homePanel");
        currentCard = "homePanel";
    }
    
    /**
     * This method helps to set the current customer involved in the interface.
     * @param customer The customer involved
     */
    public static void setCustomer(Customer customer) {
        currentCustomer = customer;
    }
    
    /**
     * This method helps to set the card string for cards.
     * @param input The name of the card
     */
    public static void setCardString(String input) {
        currentCard = input;
    }
    
    /**
     * This method helps to reset the style of the prompts when navigating through additional cards.
     */
    public static void resetSelectStatus() {
        
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        eWalletLabel.setText("E-Wallet");
        eWalletLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }
    
    /**
     * This method helps to add the additional card created into a list (for record purposes).
     * @param card The additional card panel generated
     */
    public static void addAdditionalPanels(JPanel card) {
        additionalPanels.add(card);
    }
    
    /**
     * This method helps to remove all the additional panels when switching back to the main cards.
     */
    public static void removeAdditionalPanels() {
    
        // Remove the card panel based on the list
        additionalPanels.forEach(card -> {
            currentCardPanel.remove(card);
        });
        
        // Reset the list
        additionalPanels.clear();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        basePanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        }
        ;
        headerPanel = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        logoPictureLabel = new javax.swing.JLabel();
        homePageLabel = new javax.swing.JLabel();
        orderHistoryLabel = new javax.swing.JLabel();
        eWalletLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        settingsIcon = new javax.swing.JLabel();
        notificationIcon = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        titleText = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        runnerBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Food Court System");
        setMinimumSize(new java.awt.Dimension(1400, 800));
        setName("vendorMainFrame"); // NOI18N
        setSize(new java.awt.Dimension(1400, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        basePanel.setBackground(new java.awt.Color(0, 0, 0, 0));
        basePanel.setOpaque(false);
        basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new Color(0, 0, 0, 0));
        headerPanel.setOpaque(false);
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logo_light_without_text.png"))); // NOI18N
        headerPanel.add(logoPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        homePageLabel.setBackground(new Color(0, 0, 0, 0));
        homePageLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        homePageLabel.setForeground(new java.awt.Color(255, 255, 255));
        homePageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.setToolTipText("");
        homePageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePageLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homePageLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homePageLabelMouseExited(evt);
            }
        });
        headerPanel.add(homePageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 140, 30));

        orderHistoryLabel.setBackground(new Color(0, 0, 0, 0));
        orderHistoryLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        orderHistoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderHistoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseExited(evt);
            }
        });
        headerPanel.add(orderHistoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 170, 30));

        eWalletLabel.setBackground(new Color(0, 0, 0, 0));
        eWalletLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        eWalletLabel.setForeground(new java.awt.Color(255, 255, 255));
        eWalletLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eWalletLabel.setText("E-Wallet");
        eWalletLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eWalletLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eWalletLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eWalletLabelMouseExited(evt);
            }
        });
        headerPanel.add(eWalletLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 140, 30));

        feedbackLabel.setBackground(new Color(0, 0, 0, 0));
        feedbackLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        feedbackLabel.setForeground(new java.awt.Color(255, 255, 255));
        feedbackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackLabel.setText("Feedback");
        feedbackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseExited(evt);
            }
        });
        headerPanel.add(feedbackLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, 140, 30));

        settingsIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settingsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/settings_icon.png"))); // NOI18N
        settingsIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsIconMouseClicked(evt);
            }
        });
        headerPanel.add(settingsIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 50, 70, 60));

        notificationIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notificationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/notification_icon.png"))); // NOI18N
        notificationIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        notificationIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationIconMouseClicked(evt);
            }
        });
        headerPanel.add(notificationIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 40, 60, 70));

        logoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logout_icon.png"))); // NOI18N
        logoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutIconMouseClicked(evt);
            }
        });
        headerPanel.add(logoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 50, 60, 60));

        titleText.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        titleText.setForeground(new java.awt.Color(255, 255, 255));
        titleText.setText("Title Here");
        headerPanel.add(titleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        basePanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 230));

        cardPanel.setBackground(new Color(0, 0, 0, 0));
        cardPanel.setOpaque(false);
        cardPanel.setLayout(new java.awt.CardLayout());
        basePanel.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 1400, 570));

        backgroundPanel.add(basePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        runnerBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/customer_background.jpg"))); // NOI18N
        runnerBackground.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        runnerBackground.setOpaque(true);
        backgroundPanel.add(runnerBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 230));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseClicked
        
        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();

        // Switch to dashboard card
        cardLayout.show(cardPanel, "homePanel");
        currentCard = "homePanel";
        
        // Change formatting for the text
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));

        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        eWalletLabel.setText("E-Wallet");
        eWalletLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        // Remove the additional panels generated
        removeAdditionalPanels();
    }//GEN-LAST:event_homePageLabelMouseClicked

    private void orderHistoryLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();

        // Switch to vendor card
        cardLayout.show(cardPanel, "orderHistoryPanel");
        currentCard = "orderHistoryPanel";

        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        orderHistoryLabel.setText("<html><u>Order History</u></html>");
        orderHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));

        eWalletLabel.setText("E-Wallet");
        eWalletLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        // Remove the additional panels generated
        removeAdditionalPanels();
    }//GEN-LAST:event_orderHistoryLabelMouseClicked

    private void eWalletLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eWalletLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();

        // Switch to runner card
        cardLayout.show(cardPanel, "eWalletPanel");
        currentCard = "eWalletPanel";

        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        eWalletLabel.setText("<html><u>E-Wallet</u></html>");
        eWalletLabel.setFont(new Font("Arial", Font.BOLD, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        // Remove the additional panels generated
        removeAdditionalPanels();
    }//GEN-LAST:event_eWalletLabelMouseClicked

    private void feedbackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to feedback card
        cardLayout.show(cardPanel, "feedbackPanel");
        currentCard = "feedbackPanel";
        
        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        eWalletLabel.setText("E-Wallet");
        eWalletLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("<html><u>Feedback</u></html>");
        feedbackLabel.setFont(new Font("Arial", Font.BOLD, 24));
        
        // Remove the additional panels generated
        removeAdditionalPanels();
    }//GEN-LAST:event_feedbackLabelMouseClicked

    private void homePageLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseEntered
        
        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePanel")) {
            
            // Bold the text
            homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseEntered

    private void homePageLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseExited

        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePanel")) {
            
            // Reset the text
            homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseExited

    private void orderHistoryLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseEntered

        // Set cursor
        orderHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not order history page
        if (!currentCard.equals("orderHistoryPanel")) {
            
            // Bold the text
            orderHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_orderHistoryLabelMouseEntered

    private void orderHistoryLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseExited

        // Set cursor
        orderHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not order history page
        if (!currentCard.equals("orderHistoryPanel")) {
            
            // Reset the text
            orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_orderHistoryLabelMouseExited

    private void eWalletLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eWalletLabelMouseEntered

        // Set cursor
        eWalletLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not e-wallet page
        if (!currentCard.equals("eWalletPanel")) {
            
            // Bold the text
            eWalletLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_eWalletLabelMouseEntered

    private void eWalletLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eWalletLabelMouseExited

        // Set cursor
        eWalletLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not e-wallet page
        if (!currentCard.equals("eWalletPanel")) {
            
            // Reset the text
            eWalletLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_eWalletLabelMouseExited
    
    private void feedbackLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseEntered

        // Set cursor
        feedbackLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not feedback page
        if (!currentCard.equals("feedbackPanel")) {
            
            // Bold the text
            feedbackLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_feedbackLabelMouseEntered

    private void feedbackLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseExited

        // Set cursor
        feedbackLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not feedback page
        if (!currentCard.equals("feedbackPanel")) {
            
            // Reset the text
            feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_feedbackLabelMouseExited

    private void logoutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseClicked
 
        // Display a messsage to confirm logout
        SystemPopUp logoutConfirmation = new SystemPopUp(
                this,
                "Logout from System",
                "Are you sure you wish to logout from the system?",
                new String[]{"No", "Yes"}
        );
        logoutConfirmation.setVisible(true);
        
        // Get the status of the notification
        int status = logoutConfirmation.getStatus();
        
        // If "Yes" is chosen
        if (status == 1) {
            
            // Display a message to indicate that logout is successful
            SystemPopUp successLogout = new SystemPopUp(
                this,
                "Logout Success",
                "Thank you for using the system!",
                new String[]{"OK"}
            );
            successLogout.setVisible(true);
            
            // Redirect users to home page
            HomePage homePage = new HomePage();
            homePage.setVisible(true);
            homePage.setLocationRelativeTo(this);
            
            // Dispose the current frame
            dispose();
        }
    }//GEN-LAST:event_logoutIconMouseClicked

    private void settingsIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsIconMouseClicked

        // Call the modify address panel
        DeliveryAddressForm modifyAddress = new DeliveryAddressForm(currentCustomer);
        modifyAddress.setVisible(true);
        modifyAddress.setLocationRelativeTo(this);
        
        // Disable the current frame
        setEnabled(false);
    }//GEN-LAST:event_settingsIconMouseClicked

    private void notificationIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseClicked

        // Display notification pop up
        NotificationPopUp notificationFrame = new NotificationPopUp(currentCustomer);
        notificationFrame.setVisible(true);
        notificationFrame.setLocationRelativeTo(this);
    }//GEN-LAST:event_notificationIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel backgroundPanel;
    private static javax.swing.JPanel basePanel;
    private static javax.swing.JPanel cardPanel;
    private static javax.swing.JLabel eWalletLabel;
    private static javax.swing.JLabel feedbackLabel;
    private javax.swing.JPanel headerPanel;
    private static javax.swing.JLabel homePageLabel;
    private javax.swing.JLabel logoPictureLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel notificationIcon;
    private static javax.swing.JLabel orderHistoryLabel;
    private static javax.swing.JLabel runnerBackground;
    private javax.swing.JLabel settingsIcon;
    private javax.swing.JLabel titleText;
    // End of variables declaration//GEN-END:variables
}
