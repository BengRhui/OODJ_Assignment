/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.customer;

import backend.entity.Feedback;
import java.awt.Dimension;

/**
 *
 * @author Jun Hong (TP068580), Beng Rhui (TP068495)
 */
public class FeedbackDetailsFrame extends javax.swing.JFrame {

    private Feedback currentFeedback;
    
    /**
     * Creates new form FeedbackDetailsFrame
     */
    public FeedbackDetailsFrame(Feedback feedback) {
        
        // Initialize current feedback
        currentFeedback = feedback;
        
        // Render GUI components
        initComponents();
        
        // If there is no reply from manager
        if (currentFeedback.getReplyFromManager() == null || currentFeedback.getReplyFromManager().isBlank()) {
            
            // Remove the panel
            backgroundPanel.remove(managerReplyPanel);
            
            // Resize the frame
            setSize(new Dimension(900, 300));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        feedbackDetailsTitle = new javax.swing.JLabel();
        closeIcon = new javax.swing.JLabel();
        titkeScrollPane = new javax.swing.JScrollPane();
        titleField = new javax.swing.JTextArea();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        managerReplyPanel = new javax.swing.JPanel();
        replyTitleScrollPane = new javax.swing.JScrollPane();
        replyTitleField = new javax.swing.JTextArea();
        replyDescriptionScrollPane = new javax.swing.JScrollPane();
        replyDescriptionField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Feedback Details");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setBackground(new java.awt.Color(255, 251, 233));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        feedbackDetailsTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        feedbackDetailsTitle.setText("Feedback Details");
        backgroundPanel.add(feedbackDetailsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 720, 50));

        closeIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/cancel_icon.png"))); // NOI18N
        closeIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeIconMouseClicked(evt);
            }
        });
        backgroundPanel.add(closeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, 50, 50));

        titkeScrollPane.setBorder(null);
        titkeScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        titkeScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        titleField.setEditable(false);
        titleField.setBackground(new java.awt.Color(255, 251, 233));
        titleField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleField.setRows(1);
        titleField.setText(currentFeedback.getFeedbackTitle());
        titleField.setBorder(null);
        titkeScrollPane.setViewportView(titleField);

        backgroundPanel.add(titkeScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 780, 40));

        descriptionScrollPane.setBorder(null);
        descriptionScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        descriptionScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        descriptionField.setEditable(false);
        descriptionField.setBackground(new java.awt.Color(255, 251, 233));
        descriptionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        descriptionField.setLineWrap(true);
        descriptionField.setText(currentFeedback.getFeedbackDetails());
        descriptionField.setWrapStyleWord(true);
        descriptionField.setBorder(null);
        descriptionField.setSize(new java.awt.Dimension(780, 89));
        descriptionScrollPane.setViewportView(descriptionField);

        backgroundPanel.add(descriptionScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, 110));

        managerReplyPanel.setBackground(new java.awt.Color(227, 202, 165));
        managerReplyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        replyTitleScrollPane.setBorder(null);
        replyTitleScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        replyTitleScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        replyTitleField.setEditable(false);
        replyTitleField.setBackground(new java.awt.Color(227, 202, 165));
        replyTitleField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        replyTitleField.setRows(1);
        replyTitleField.setText("Reply from Manager");
        replyTitleField.setBorder(null);
        replyTitleScrollPane.setViewportView(replyTitleField);

        managerReplyPanel.add(replyTitleScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 720, 40));

        replyDescriptionScrollPane.setBorder(null);
        replyDescriptionScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        replyDescriptionScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        replyDescriptionField.setEditable(false);
        replyDescriptionField.setBackground(new java.awt.Color(227, 202, 165));
        replyDescriptionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        replyDescriptionField.setLineWrap(true);
        replyDescriptionField.setRows(1);
        replyDescriptionField.setText(currentFeedback.getReplyFromManager());
        replyDescriptionField.setWrapStyleWord(true);
        replyDescriptionField.setBorder(null);
        replyDescriptionField.setPreferredSize(new java.awt.Dimension(720, 22));
        replyDescriptionScrollPane.setViewportView(replyDescriptionField);

        managerReplyPanel.add(replyDescriptionScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 120));

        backgroundPanel.add(managerReplyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 780, 230));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeIconMouseClicked

        // Enable the parent frame
        MainPage.currentFrame.setEnabled(true);
        
        // Dispose the current frame
        dispose();
    }//GEN-LAST:event_closeIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeedbackDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeedbackDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeedbackDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeedbackDetailsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Feedback feedback = Feedback.getFeedbackList().getFirst();
                new FeedbackDetailsFrame(feedback).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel closeIcon;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JLabel feedbackDetailsTitle;
    private javax.swing.JPanel managerReplyPanel;
    private javax.swing.JTextArea replyDescriptionField;
    private javax.swing.JScrollPane replyDescriptionScrollPane;
    private javax.swing.JTextArea replyTitleField;
    private javax.swing.JScrollPane replyTitleScrollPane;
    private javax.swing.JScrollPane titkeScrollPane;
    private javax.swing.JTextArea titleField;
    // End of variables declaration//GEN-END:variables
}
