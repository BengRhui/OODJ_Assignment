/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.customer;

import backend.entity.Feedback;
import frontend.pop_up.SystemPopUp;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Jun Hong (TP068580), Beng Rhui (TP068495)
 */
public class FeedbackPanel extends javax.swing.JPanel {

    private String selectedRatings;
    
    /**
     * Creates new form FeedbackPanel
     */
    public FeedbackPanel() {
        
        // Render GUI components
        initComponents();
        
        // Update previous feedback
        updateFeedbackPanel();
    }
    
    public static void updateFeedbackPanel() {
        
        // Remove all components
        previousFeedbackPanel.removeAll();
        
        // Set the current order list to the list with incomplete orders
        ArrayList<Feedback> feedbackList = Feedback.getFeedbackList(MainPage.getCustomer());
        
        // If the order list is empty
        if (feedbackList.isEmpty()) {
            
            // Generate a label to panel
            JPanel emptyPanel = new JPanel(null);
            
            // Add a label to indicate that no order is available for vendor
            JLabel emptyLabel = new JLabel("No stall available for the current category.");
            emptyLabel.setFont(new Font("Arial", Font.PLAIN, 24));
            emptyLabel.setBounds(0, 0, 500, 30);
            
            // Add the components
            emptyPanel.add(emptyLabel);
            previousFeedbackPanel.add(emptyPanel);
            
        } else {
            
            // Add order details into panel
            for (Feedback feedback : feedbackList) {

                // Create a details panel based on order details panel in another class
                FeedbackBriefPanel detailsPanel = new FeedbackBriefPanel(feedback);

                // Add cursor to the panel
                detailsPanel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

                // Add the details panel to the overall panel
                previousFeedbackPanel.add(detailsPanel);
                
                // If the panel is not the last panel, add space
                if (!feedbackList.getLast().equals(feedback))
                    previousFeedbackPanel.add(Box.createVerticalStrut(20));
            }
        }
        
        // Refresh the overall panel after modifications
        previousFeedbackPanel.revalidate();
        previousFeedbackPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        feedbackTitle = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        scoreTitle = new javax.swing.JLabel();
        scoreOneTitle = new javax.swing.JPanel();
        oneText = new javax.swing.JLabel();
        scoreTwoTitle = new javax.swing.JPanel();
        twoText = new javax.swing.JLabel();
        scoreThreeTitle = new javax.swing.JPanel();
        threeText = new javax.swing.JLabel();
        scoreFourTitle = new javax.swing.JPanel();
        fourText = new javax.swing.JLabel();
        scoreFiveTitle = new javax.swing.JPanel();
        fiveText = new javax.swing.JLabel();
        unsatisfactoryLabel = new javax.swing.JLabel();
        perfectLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        previousFeedbackLabel = new javax.swing.JLabel();
        previousFeedbackScrollPane = new javax.swing.JScrollPane();
        previousFeedbackPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 251, 233));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        feedbackTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        feedbackTitle.setText("Submit Feedback");
        add(feedbackTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 330, 60));

        titleLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleLabel.setText("Title");
        add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 130, 40));

        titleField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        titleField.setForeground(new java.awt.Color(204, 204, 204));
        titleField.setText("Enter Feedback Title");
        titleField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        titleField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                titleFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                titleFieldFocusLost(evt);
            }
        });
        add(titleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 340, 50));

        scoreTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        scoreTitle.setText("Score");
        add(scoreTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, 40));

        scoreOneTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreOneTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreOneTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        oneText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        oneText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oneText.setText("1");
        oneText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        oneText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oneTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                oneTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                oneTextMouseExited(evt);
            }
        });
        scoreOneTitle.add(oneText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        add(scoreOneTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 50, 50));

        scoreTwoTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreTwoTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreTwoTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        twoText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        twoText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        twoText.setText("2");
        twoText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        twoText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twoTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                twoTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                twoTextMouseExited(evt);
            }
        });
        scoreTwoTitle.add(twoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        add(scoreTwoTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 140, 50, 50));

        scoreThreeTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreThreeTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreThreeTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        threeText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        threeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        threeText.setText("3");
        threeText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        threeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                threeTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                threeTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                threeTextMouseExited(evt);
            }
        });
        scoreThreeTitle.add(threeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        add(scoreThreeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 140, 50, 50));

        scoreFourTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreFourTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreFourTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fourText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fourText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fourText.setText("4");
        fourText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fourText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fourTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fourTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fourTextMouseExited(evt);
            }
        });
        scoreFourTitle.add(fourText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        add(scoreFourTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 140, 50, 50));

        scoreFiveTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreFiveTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreFiveTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fiveText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fiveText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fiveText.setText("5");
        fiveText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fiveText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fiveTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fiveTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fiveTextMouseExited(evt);
            }
        });
        scoreFiveTitle.add(fiveText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        add(scoreFiveTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(616, 140, 50, 50));

        unsatisfactoryLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unsatisfactoryLabel.setText("Unsatisfactory");
        add(unsatisfactoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, -1, -1));

        perfectLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        perfectLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        perfectLabel.setText("Perfect");
        add(perfectLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 200, 60, -1));

        descriptionLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        descriptionLabel.setText("Description");
        add(descriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 290, 40));

        descriptionScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        descriptionField.setColumns(20);
        descriptionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        descriptionField.setForeground(new java.awt.Color(204, 204, 204));
        descriptionField.setLineWrap(true);
        descriptionField.setRows(5);
        descriptionField.setText("Enter Description Here");
        descriptionField.setWrapStyleWord(true);
        descriptionField.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 15, 12, 15));
        descriptionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                descriptionFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                descriptionFieldFocusLost(evt);
            }
        });
        descriptionScrollPane.setViewportView(descriptionField);

        add(descriptionScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 604, 180));

        submitButton.setBackground(new java.awt.Color(0, 0, 0));
        submitButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.setFocusPainted(false);
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitButtonMouseExited(evt);
            }
        });
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 470, 210, 50));

        previousFeedbackLabel.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        previousFeedbackLabel.setText("Previous Feedback");
        add(previousFeedbackLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 40, 330, 60));

        previousFeedbackScrollPane.setBorder(null);
        previousFeedbackScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        previousFeedbackScrollPane.setToolTipText("");
        previousFeedbackScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        previousFeedbackPanel.setBackground(new java.awt.Color(255, 251, 233));
        previousFeedbackPanel.setLayout(new javax.swing.BoxLayout(previousFeedbackPanel, javax.swing.BoxLayout.Y_AXIS));
        previousFeedbackScrollPane.setViewportView(previousFeedbackPanel);

        add(previousFeedbackScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 610, 410));
    }// </editor-fold>//GEN-END:initComponents

    private void oneTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseClicked

        // Set selected ratings
        selectedRatings = oneText.getText();

        // Set text and colour
        oneText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreOneTitle.setBackground(new Color(227, 202, 165));

        // Reset other's background and text
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_oneTextMouseClicked

    private void oneTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("1")) {

            // Bold the text and set background
            oneText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreOneTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_oneTextMouseEntered

    private void oneTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("1")) {

            // Reset the text and background
            oneText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreOneTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_oneTextMouseExited

    private void twoTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseClicked

        // Set selected ratings
        selectedRatings = twoText.getText();

        // Set text and colour
        twoText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreTwoTitle.setBackground(new Color(227, 202, 165));

        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_twoTextMouseClicked

    private void twoTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("2")) {

            // Bold the text and store background
            twoText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreTwoTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_twoTextMouseEntered

    private void twoTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("2")) {

            // Reset the text and background
            twoText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreTwoTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_twoTextMouseExited

    private void threeTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseClicked

        // Set selected ratings
        selectedRatings = threeText.getText();

        // Set text and colour
        threeText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreThreeTitle.setBackground(new Color(227, 202, 165));

        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_threeTextMouseClicked

    private void threeTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("3")) {

            // Bold the text and set background
            threeText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreThreeTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_threeTextMouseEntered

    private void threeTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("3")) {

            // Reset the text and background
            threeText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreThreeTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_threeTextMouseExited

    private void fourTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseClicked

        // Set selected ratings
        selectedRatings = fourText.getText();

        // Set text and colour
        fourText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreFourTitle.setBackground(new Color(227, 202, 165));

        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_fourTextMouseClicked

    private void fourTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("4")) {

            // Bold the text and set background
            fourText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreFourTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_fourTextMouseEntered

    private void fourTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("4")) {

            // Reset the text and background
            fourText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFourTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_fourTextMouseExited

    private void fiveTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseClicked

        // Set selected ratings
        selectedRatings = fiveText.getText();

        // Set text and colour
        fiveText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreFiveTitle.setBackground(new Color(227, 202, 165));

        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_fiveTextMouseClicked

    private void fiveTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("5")) {

            // Bold the text and set background
            fiveText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreFiveTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_fiveTextMouseEntered

    private void fiveTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("5")) {

            // Reset the text and background
            fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFiveTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_fiveTextMouseExited

    private void titleFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleFieldFocusGained

        // If the prompt still exists
        if (titleField.getText().equals("Enter Feedback Title")) {
            
            // Remove prompt
            titleField.setText("");
            
            // Set text to black
            titleField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_titleFieldFocusGained

    private void titleFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleFieldFocusLost
      
        // If input is empty
        if (titleField.getText().isBlank()) {
            
            // Remove prompt
            titleField.setText("Enter Feedback Title");
            
            // Set text to grey
            titleField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_titleFieldFocusLost

    private void descriptionFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionFieldFocusGained

        // If the prompt still exists
        if (descriptionField.getText().equals("Enter Description Here")) {
            
            // Remove prompt
            descriptionField.setText("");
            
            // Set text to black
            descriptionField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_descriptionFieldFocusGained

    private void descriptionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionFieldFocusLost
      
        // If input is empty
        if (descriptionField.getText().isBlank()) {
            
            // Remove prompt
            descriptionField.setText("Enter Description Here");
            
            // Set text to grey
            descriptionField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_descriptionFieldFocusLost

    private void submitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseEntered

        // Change the background and text colour
        submitButton.setBackground(new Color(206, 171, 147));
        submitButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_submitButtonMouseEntered

    private void submitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseExited

        // Change the background and text colour
        submitButton.setBackground(Color.BLACK);
        submitButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_submitButtonMouseExited

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        // Retrieve the information
        String title = titleField.getText().strip();
        String description = descriptionField.getText().strip();
        
        // Send feedback
        int sendStatus = Feedback.customerProvideFeedback(
                Feedback.Category.SYSTEM, 
                MainPage.getCustomer(),
                null, 
                selectedRatings == null ? 0 : Integer.valueOf(selectedRatings),
                title, 
                description,
                null
        );
        
        // If feedback is sent successfully
        if (sendStatus == 1) {
        
            // Call a message to indicate successful submission
            SystemPopUp successMessage = new SystemPopUp(
                    MainPage.currentFrame,
                    "Feedback Submitted",
                    "Your feedback is submitted successfully. Stay tuned for reply from our managers.",
                    new String[]{"OK"}
            );
            successMessage.setVisible(true);
            
            // Update panel
            updateFeedbackPanel();
            
            // Reset the fields
            titleField.setText("Enter Feedback Title");
            titleField.setForeground(new Color(204, 204, 204));
            descriptionField.setText("Enter Description Here");
            descriptionField.setForeground(new Color(204, 204, 204));
            
            // Reset the ratings panel
            selectedRatings = null;
            oneText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreOneTitle.setBackground(Color.WHITE);
            twoText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreTwoTitle.setBackground(Color.WHITE);
            threeText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreThreeTitle.setBackground(Color.WHITE);
            fourText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFourTitle.setBackground(Color.WHITE);
            fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFiveTitle.setBackground(Color.WHITE);
            
        } else {
        
            // Fail to create feedback. Declare variable to store error message.
            String errorString;
            
            // Generate error message based on different status
            switch (sendStatus) {
                case 0 -> errorString = "Please ensure that all fields are filled before submiitting feedback.";
                default -> errorString = "Unexpected error. Please inspect code.";
            }
            
            // Generate message to inform users
            SystemPopUp errorMessage = new SystemPopUp(
                    MainPage.currentFrame,
                    "Error",
                    errorString,
                    new String[]{"OK"}
            );
            errorMessage.setVisible(true);
        }
        
    }//GEN-LAST:event_submitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JLabel feedbackTitle;
    private javax.swing.JLabel fiveText;
    private javax.swing.JLabel fourText;
    private javax.swing.JLabel oneText;
    private javax.swing.JLabel perfectLabel;
    private javax.swing.JLabel previousFeedbackLabel;
    private static javax.swing.JPanel previousFeedbackPanel;
    private javax.swing.JScrollPane previousFeedbackScrollPane;
    private javax.swing.JPanel scoreFiveTitle;
    private javax.swing.JPanel scoreFourTitle;
    private javax.swing.JPanel scoreOneTitle;
    private javax.swing.JPanel scoreThreeTitle;
    private javax.swing.JLabel scoreTitle;
    private javax.swing.JPanel scoreTwoTitle;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel threeText;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel twoText;
    private javax.swing.JLabel unsatisfactoryLabel;
    // End of variables declaration//GEN-END:variables
}
