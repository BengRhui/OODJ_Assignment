/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.customer;

import backend.entity.Customer;
import backend.entity.Feedback;
import backend.entity.Order;
import frontend.pop_up.SystemPopUp;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;

/**
 *
 * @author Jun Hong (TP068580), Beng Rhui (TP068495)
 */
public class ProvideOrderFeedbackFrame extends javax.swing.JFrame {

    private Order currentOrder;
    private String[] dropDown;
    private String selectedRatings;
    
    /**
     * Creates new form ProvideOrderFeedbackFrame
     */
    public ProvideOrderFeedbackFrame(Order order, int status) {
        
        // Set current order
        currentOrder = order;
        
        // Generate different dropdown options based on status
        String[] dropdownOptions;
        
        switch (status) {
            case 0 -> dropdownOptions = Feedback.Category.ORDER_CATEGORY_OPTIONS;
            case 1 -> dropdownOptions = new String[]{Feedback.Category.VENDOR.toString()};
            case 2 -> dropdownOptions = new String[]{Feedback.Category.DELIVERY_RUNNER.toString()};
            default -> throw new IllegalArgumentException("The wrong status is passed into the method. Please inspect code.");
        }
        
        // Save the list
        dropDown = dropdownOptions;
        
        // Render GUI components
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        feedbackTitle = new javax.swing.JLabel();
        categoryTitle = new javax.swing.JLabel();
        categoryDropDown = new javax.swing.JComboBox<>(dropDown);
        scoreTitle = new javax.swing.JLabel();
        scoreOneTitle = new javax.swing.JPanel();
        oneText = new javax.swing.JLabel();
        scoreTwoTitle = new javax.swing.JPanel();
        twoText = new javax.swing.JLabel();
        scoreThreeTitle = new javax.swing.JPanel();
        threeText = new javax.swing.JLabel();
        scoreFourTitle = new javax.swing.JPanel();
        fourText = new javax.swing.JLabel();
        scoreFiveTitle = new javax.swing.JPanel();
        fiveText = new javax.swing.JLabel();
        unsatisfactoryLabel = new javax.swing.JLabel();
        perfectLabel = new javax.swing.JLabel();
        tipsAmount = new javax.swing.JLabel();
        tipsField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Feedback");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setBackground(new java.awt.Color(255, 251, 233));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        feedbackTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        feedbackTitle.setText("Feedback");
        backgroundPanel.add(feedbackTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        categoryTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        categoryTitle.setText("Category");
        backgroundPanel.add(categoryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        categoryDropDown.setBackground(Color.WHITE);
        categoryDropDown.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        categoryDropDown.setForeground(new java.awt.Color(204, 204, 204));
        categoryDropDown.setSelectedIndex(-1);
        categoryDropDown.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        categoryDropDown.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        categoryDropDown.setFocusable(false);
        categoryDropDown.setOpaque(true);
        categoryDropDown.setRenderer(new DefaultListCellRenderer() {

            // Override the rendering method
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {

                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                if (index == -1 && value == null) {
                    label.setText("Select Category Here");
                    label.setForeground(new Color(204, 204, 204));
                } else {
                    label.setForeground(Color.BLACK);
                }

                // Apply your existing custom rendering (size and border)
                label.setPreferredSize(new Dimension(label.getPreferredSize().width, 40));
                label.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));

                return label;
            }
        });
        categoryDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryDropDownActionPerformed(evt);
            }
        });
        backgroundPanel.add(categoryDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 260, 50));

        scoreTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        scoreTitle.setText("Score");
        backgroundPanel.add(scoreTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        scoreOneTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreOneTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreOneTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        oneText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        oneText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        oneText.setText("1");
        oneText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        oneText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oneTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                oneTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                oneTextMouseExited(evt);
            }
        });
        scoreOneTitle.add(oneText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        backgroundPanel.add(scoreOneTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 50, 50));

        scoreTwoTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreTwoTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreTwoTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        twoText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        twoText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        twoText.setText("2");
        twoText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        twoText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twoTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                twoTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                twoTextMouseExited(evt);
            }
        });
        scoreTwoTitle.add(twoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        backgroundPanel.add(scoreTwoTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 150, 50, 50));

        scoreThreeTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreThreeTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreThreeTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        threeText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        threeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        threeText.setText("3");
        threeText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        threeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                threeTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                threeTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                threeTextMouseExited(evt);
            }
        });
        scoreThreeTitle.add(threeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        backgroundPanel.add(scoreThreeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 150, 50, 50));

        scoreFourTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreFourTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreFourTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fourText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fourText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fourText.setText("4");
        fourText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fourText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fourTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fourTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fourTextMouseExited(evt);
            }
        });
        scoreFourTitle.add(fourText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        backgroundPanel.add(scoreFourTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 150, 50, 50));

        scoreFiveTitle.setBackground(new java.awt.Color(255, 255, 255));
        scoreFiveTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        scoreFiveTitle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fiveText.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fiveText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fiveText.setText("5");
        fiveText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fiveText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fiveTextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fiveTextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fiveTextMouseExited(evt);
            }
        });
        scoreFiveTitle.add(fiveText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        backgroundPanel.add(scoreFiveTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 150, 50, 50));

        unsatisfactoryLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unsatisfactoryLabel.setText("Unsatisfactory");
        backgroundPanel.add(unsatisfactoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, -1, -1));

        perfectLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        perfectLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        perfectLabel.setText("Perfect");
        backgroundPanel.add(perfectLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 210, 60, -1));

        tipsAmount.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tipsAmount.setText("Tips (RM)");
        backgroundPanel.add(tipsAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, -1, -1));

        tipsField.setBackground(new java.awt.Color(204, 204, 204));
        tipsField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tipsField.setForeground(new java.awt.Color(204, 204, 204));
        tipsField.setText("Enter Tips Here");
        tipsField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        tipsField.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        tipsField.setEnabled(false);
        tipsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tipsFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tipsFieldFocusLost(evt);
            }
        });
        backgroundPanel.add(tipsField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 210, 50));

        titleLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleLabel.setText("Title");
        backgroundPanel.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        titleField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        titleField.setForeground(new java.awt.Color(204, 204, 204));
        titleField.setText("Enter Feedback Title");
        titleField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        titleField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                titleFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                titleFieldFocusLost(evt);
            }
        });
        titleField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titleFieldKeyTyped(evt);
            }
        });
        backgroundPanel.add(titleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 790, 50));

        descriptionLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        descriptionLabel.setText("Description");
        backgroundPanel.add(descriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        descriptionScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        descriptionField.setColumns(20);
        descriptionField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        descriptionField.setForeground(new java.awt.Color(204, 204, 204));
        descriptionField.setLineWrap(true);
        descriptionField.setRows(1);
        descriptionField.setText("Enter Description Here");
        descriptionField.setWrapStyleWord(true);
        descriptionField.setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 15, 12, 15));
        descriptionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                descriptionFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                descriptionFieldFocusLost(evt);
            }
        });
        descriptionField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descriptionFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descriptionFieldKeyTyped(evt);
            }
        });
        descriptionScrollPane.setViewportView(descriptionField);

        backgroundPanel.add(descriptionScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 790, 170));

        cancelButton.setBackground(Color.WHITE);
        cancelButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.setFocusPainted(false);
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 600, 190, 50));

        submitButton.setBackground(new java.awt.Color(0, 0, 0));
        submitButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("Submit");
        submitButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.setFocusPainted(false);
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitButtonMouseExited(evt);
            }
        });
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 600, 190, 50));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryDropDownActionPerformed

        // Change the text colour to black
        categoryDropDown.setForeground(Color.BLACK);
        
        // Check if the selected category is delivery runner
        if (categoryDropDown.getSelectedItem().toString().equals("Delivery Runner")) {
            
            // Enable the text field
            tipsField.setEnabled(true);
            tipsField.setBackground(Color.WHITE);
            
        } else {
        
            // Disable the text field if the category is not runner
            tipsField.setEnabled(false);
            tipsField.setBackground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_categoryDropDownActionPerformed

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered

        // Change background
        cancelButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited

        // Change background
        cancelButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_cancelButtonMouseExited

    private void submitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseEntered

        // Change background and text
        submitButton.setBackground(new Color(206, 171, 147));
        submitButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_submitButtonMouseEntered

    private void submitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseExited

        // Change background and text
        submitButton.setBackground(Color.BLACK);
        submitButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_submitButtonMouseExited

    private void tipsFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tipsFieldFocusGained

        // If prompt exists
        if (tipsField.getText().equals("Enter Tips Here")) {
            
            // Remove prompt
            tipsField.setText("");
            
            // Set text colour
            tipsField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tipsFieldFocusGained

    private void tipsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tipsFieldFocusLost

        // If input is blank
        if (tipsField.getText().isBlank()) {
            
            // Remove prompt
            tipsField.setText("Enter Tips Here");
            
            // Set text colour
            tipsField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_tipsFieldFocusLost

    private void titleFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleFieldFocusGained

        // If prompt exists
        if (titleField.getText().equals("Enter Feedback Title")) {
            
            // Remove prompt
            titleField.setText("");
            
            // Set text colour
            titleField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_titleFieldFocusGained

    private void titleFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleFieldFocusLost

        // If input is blank
        if (titleField.getText().isBlank()) {
            
            // Remove prompt
            titleField.setText("Enter Feedback Title");
            
            // Set text colour
            titleField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_titleFieldFocusLost

    private void descriptionFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionFieldFocusGained

        // If prompt exists
        if (descriptionField.getText().equals("Enter Description Here")) {
            
            // Remove prompt
            descriptionField.setText("");
            
            // Set text colour
            descriptionField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_descriptionFieldFocusGained

    private void descriptionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionFieldFocusLost

        // If input is blank
        if (descriptionField.getText().isBlank()) {
            
            // Remove prompt
            descriptionField.setText("Enter Description Here");
            
            // Set text colour
            descriptionField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_descriptionFieldFocusLost

    private void oneTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("1")) {
            
            // Bold the text and set background
            oneText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreOneTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_oneTextMouseEntered

    private void oneTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("1")) {
            
            // Reset the text and background
            oneText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreOneTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_oneTextMouseExited

    private void twoTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("2")) {
            
            // Bold the text and store background
            twoText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreTwoTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_twoTextMouseEntered

    private void twoTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("2")) {
            
            // Reset the text and background
            twoText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreTwoTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_twoTextMouseExited

    private void threeTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("3")) {
            
            // Bold the text and set background
            threeText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreThreeTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_threeTextMouseEntered

    private void threeTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("3")) {
            
            // Reset the text and background
            threeText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreThreeTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_threeTextMouseExited

    private void fourTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("4")) {
            
            // Bold the text and set background
            fourText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreFourTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_fourTextMouseEntered

    private void fourTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("4")) {
            
            // Reset the text and background
            fourText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFourTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_fourTextMouseExited

    private void fiveTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseEntered

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("5")) {
            
            // Bold the text and set background
            fiveText.setFont(new Font("Arial", Font.BOLD, 18));
            scoreFiveTitle.setBackground(new Color(227, 202, 165));
        }
    }//GEN-LAST:event_fiveTextMouseEntered

    private void fiveTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseExited

        // If the panel is not the currently selected rating
        if (selectedRatings == null || !selectedRatings.equals("5")) {
            
            // Reset the text and background
            fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
            scoreFiveTitle.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_fiveTextMouseExited

    private void oneTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oneTextMouseClicked

        // Set selected ratings
        selectedRatings = oneText.getText();
        
        // Set text and colour
        oneText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreOneTitle.setBackground(new Color(227, 202, 165));
        
        // Reset other's background and text
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_oneTextMouseClicked

    private void twoTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoTextMouseClicked

        // Set selected ratings
        selectedRatings = twoText.getText();
        
        // Set text and colour
        twoText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreTwoTitle.setBackground(new Color(227, 202, 165));
        
        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_twoTextMouseClicked

    private void threeTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threeTextMouseClicked

        // Set selected ratings
        selectedRatings = threeText.getText();
        
        // Set text and colour
        threeText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreThreeTitle.setBackground(new Color(227, 202, 165));
        
        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_threeTextMouseClicked

    private void fourTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fourTextMouseClicked

        // Set selected ratings
        selectedRatings = fourText.getText();
        
        // Set text and colour
        fourText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreFourTitle.setBackground(new Color(227, 202, 165));
        
        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fiveText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFiveTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_fourTextMouseClicked

    private void fiveTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fiveTextMouseClicked

        // Set selected ratings
        selectedRatings = fiveText.getText();
        
        // Set text and colour
        fiveText.setFont(new Font("Arial", Font.BOLD, 18));
        scoreFiveTitle.setBackground(new Color(227, 202, 165));
        
        // Reset other's background and text
        oneText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreOneTitle.setBackground(Color.WHITE);
        twoText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreTwoTitle.setBackground(Color.WHITE);
        threeText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreThreeTitle.setBackground(Color.WHITE);
        fourText.setFont(new Font("Arial", Font.PLAIN, 18));
        scoreFourTitle.setBackground(Color.WHITE);
    }//GEN-LAST:event_fiveTextMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        // Enable the parent frame
        PastOrderDetailsForm.currentFrame.setEnabled(true);
        
        // Dispose this frame
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        // Wrap everything in a try catch clause (to catch any exceptions)
        try {

            // Retrieve other information from the GUI
            Feedback.Category category = categoryDropDown.getSelectedIndex() == -1 ? null : Feedback.Category.getFromString(categoryDropDown.getSelectedItem().toString());
            Customer customer = MainPage.getCustomer();
            Order order = currentOrder;
            int score = selectedRatings == null ? 0 : Integer.parseInt(selectedRatings);
            String title = titleField.getText();
            String description = descriptionField.getText();
        
            // Declare variable to store tips
            Double tips = null;
            
            // Check if the selected category is delivery runner
            if (category != null & category == Feedback.Category.DELIVERY_RUNNER) {
                
                // Test for tips
                String tipsInput = tipsField.getText().strip();
                tips = tipsInput.equals("Enter Tips Here") || tipsInput.isBlank() ? -1 : Double.valueOf(tipsInput);
                if (tips < 0) throw new NumberFormatException();
            }
            
            // Try to add feedback
            int addStatus = Feedback.customerProvideFeedback(category, customer, order, score, title, description, tips);
            
            // If the feedback is provided successfully
            if (addStatus == 1) {
                    
                // Create a system pop up to indicate success
                SystemPopUp successMessage = new SystemPopUp(
                        this,
                        "Feedback Sent",
                        "Your feedback has been successfully sent to the system.",
                        new String[]{"OK"}
                );
                successMessage.setVisible(true);

                // Enable the parent frame
                PastOrderDetailsForm.currentFrame.setEnabled(true);
                
                // Update e-wallet panel
                EWalletPanel.refreshPanel();

                // Dispose the current frame
                dispose();
                    
            } else {
                
                // Failed to send feedback. Declare variable to store error message
                String errorString;
                
                // Generate different error message based on status
                switch (addStatus) {
                    case 0 -> errorString = "Empty values detected. Please make sure that all fields are filled in before submitting.";
                    case -1 -> errorString = "Invalid order and category. Please inspect code.";
                    case -2 -> throw new NumberFormatException();
                    case -3 -> errorString = "Insufficient wallet amount. Please proceed to top up before continuing with the current operation.";
                    default -> throw new IllegalStateException("Unexpected error. Please inspect code.");
                }
                
                // Generate a pop up to indicate reason
                SystemPopUp errorMessage = new SystemPopUp(
                        this,
                        "Error",
                        errorString,
                        new String[]{"OK"}
                );
                errorMessage.setVisible(true);
            }
            
        } catch (NumberFormatException ex) {
        
            // Create error message
            SystemPopUp numberErrorMessage = new SystemPopUp(
                    this,
                    "Invalid Input",
                    "Please provide a valid price amount that is greater than 0.",
                    new String[]{"OK"}
            );
            numberErrorMessage.setVisible(true);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void titleFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleFieldKeyTyped

        // If ';' is pressed
        if (evt.getKeyChar() == ';') {
        
            // Remove it
            evt.consume();
        }
    }//GEN-LAST:event_titleFieldKeyTyped

    private void descriptionFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionFieldKeyPressed

        // If enter key is pressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        
            // Remove it
            evt.consume();
        }
    }//GEN-LAST:event_descriptionFieldKeyPressed

    private void descriptionFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionFieldKeyTyped

        // If ';' is pressed
        if (evt.getKeyChar() == ';') {
        
            // Remove it
            evt.consume();
        }
    }//GEN-LAST:event_descriptionFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProvideOrderFeedbackFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProvideOrderFeedbackFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProvideOrderFeedbackFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProvideOrderFeedbackFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Order order = Order.getOrderList().getFirst();
                new ProvideOrderFeedbackFrame(order, 2).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> categoryDropDown;
    private javax.swing.JLabel categoryTitle;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JLabel feedbackTitle;
    private javax.swing.JLabel fiveText;
    private javax.swing.JLabel fourText;
    private javax.swing.JLabel oneText;
    private javax.swing.JLabel perfectLabel;
    private javax.swing.JPanel scoreFiveTitle;
    private javax.swing.JPanel scoreFourTitle;
    private javax.swing.JPanel scoreOneTitle;
    private javax.swing.JPanel scoreThreeTitle;
    private javax.swing.JLabel scoreTitle;
    private javax.swing.JPanel scoreTwoTitle;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel threeText;
    private javax.swing.JLabel tipsAmount;
    private javax.swing.JTextField tipsField;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel twoText;
    private javax.swing.JLabel unsatisfactoryLabel;
    // End of variables declaration//GEN-END:variables
}
