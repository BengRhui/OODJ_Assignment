/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.pop_up;

import backend.file_io.PictureIO;
import frontend.vendor.MainPage;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author limbengrhui
 */
public class UploadBackgroundPopUp extends javax.swing.JFrame {

    private static File uploadedBackgroundPicture;
    
    /**
     * Creates new form UploadPicturePopUp
     */
    public UploadBackgroundPopUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        backgroundPanel = new javax.swing.JPanel();
        titleText = new javax.swing.JLabel();
        descriptionText = new javax.swing.JLabel();
        fileNameText = new javax.swing.JLabel();
        fileFormatText = new javax.swing.JLabel();
        minimumSizeText = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        fileChooser.setDialogTitle("Upload Picture");
        fileChooser.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Select Background");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(600, 450));
        setName("uploadBackgroundPopUp"); // NOI18N
        setPreferredSize(new java.awt.Dimension(600, 450));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setBackground(new java.awt.Color(255, 251, 233));
        backgroundPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                backgroundPanelKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                backgroundPanelKeyReleased(evt);
            }
        });
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleText.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        titleText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleText.setText("Update Background Picture");
        backgroundPanel.add(titleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 500, -1));

        descriptionText.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        descriptionText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        descriptionText.setText("<html>     <div style=\"text-align: center;\">         You may upload a picture to be used as your background picture for the main page.     </div> </html>");
        backgroundPanel.add(descriptionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 400, 60));

        fileNameText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fileNameText.setText("(No files chosen)");
        fileNameText.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        backgroundPanel.add(fileNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 177, 250, 30));

        fileFormatText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fileFormatText.setText("Supported formats: .png, .jpeg, .jpg");
        backgroundPanel.add(fileFormatText, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 230, -1));

        minimumSizeText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        minimumSizeText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimumSizeText.setText("(Recommended minimum size: 1400 x 500 px)");
        backgroundPanel.add(minimumSizeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 380, 20));

        uploadButton.setBackground(new java.awt.Color(0, 0, 0));
        uploadButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        uploadButton.setForeground(new java.awt.Color(255, 255, 255));
        uploadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/upload_icon.png"))); // NOI18N
        uploadButton.setText("  Upload");
        uploadButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        uploadButton.setFocusable(false);
        uploadButton.setOpaque(true);
        uploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadButtonMouseExited(evt);
            }
        });
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(uploadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 140, 50));

        confirmButton.setBackground(new java.awt.Color(0, 0, 0));
        confirmButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("OK");
        confirmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        confirmButton.setFocusable(false);
        confirmButton.setOpaque(true);
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmButtonMouseExited(evt);
            }
        });
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(confirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 191, 60));

        cancelButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        cancelButton.setFocusable(false);
        cancelButton.setOpaque(true);
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        backgroundPanel.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 191, 60));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backgroundPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backgroundPanelKeyPressed

        // When the enter key is pressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            // Change the colour of the OK button
            confirmButton.setForeground(Color.BLACK);
            confirmButton.setBackground(new Color(206, 171, 147));
        }
    }//GEN-LAST:event_backgroundPanelKeyPressed

    private void backgroundPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backgroundPanelKeyReleased

        // When the enter key is pressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            // Reset the colour of the OK button
            confirmButton.setForeground(Color.WHITE);
            confirmButton.setBackground(Color.BLACK);
        }
    }//GEN-LAST:event_backgroundPanelKeyReleased

    private void uploadButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseEntered

        // Change the cursor
        uploadButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_uploadButtonMouseEntered

    private void uploadButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseExited

        // Change the cursor
        uploadButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_uploadButtonMouseExited

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered

        // Change the cursor
        cancelButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // Change the colour of the button
        cancelButton.setForeground(Color.BLACK);
        cancelButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited

        // Change the cursor
        cancelButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // Change the colour of the button
        cancelButton.setForeground(Color.BLACK);
        cancelButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_cancelButtonMouseExited

    private void confirmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseEntered

        // Change the cursor
        confirmButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // Change the colour of the button
        confirmButton.setForeground(Color.BLACK);
        confirmButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_confirmButtonMouseEntered

    private void confirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseExited

        // Change the cursor
        confirmButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // Change the colour of the button
        confirmButton.setForeground(Color.WHITE);
        confirmButton.setBackground(Color.BLACK);
    }//GEN-LAST:event_confirmButtonMouseExited

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        
        // Set filters to filter the types of file received
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Picture files", "jpg", "jpeg", "png"
        );

        // Apply the filter on the file chooser
        fileChooser.setFileFilter(filter);
        
        // Open a file chooser
        int status = fileChooser.showOpenDialog(this);
        
        // If a file is chosen
        if (status == JFileChooser.APPROVE_OPTION) {
            
            // Retrieve the selected file
            uploadedBackgroundPicture = fileChooser.getSelectedFile();
            
            // Display the file name
            fileNameText.setText(uploadedBackgroundPicture.getName());
            fileNameText.setFont(new Font("Arial", Font.BOLD, 14));
        }
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        // Remove the background file uploaded
        uploadedBackgroundPicture = null;
        
        // Enable the main page frame
        MainPage.currentFrame.setEnabled(true);
        MainPage.currentFrame.setVisible(true);
        
        // Dispose the frame
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed

        // Set the picture to directory
        PictureIO.uploadVendorBackground(uploadedBackgroundPicture, MainPage.getVendor());

        // Refresh the picture for the frame
        MainPage.updateBackground();

        // Show a notification to indicate that the background picture is updated successfully
        NotificationPopUp successNotification = new NotificationPopUp(
                this,
                "Background Updated Successfully",
                "Your background has been updated successfully.",
                new String[]{"OK"}
        );
        successNotification.setVisible(true);
        
        // Enable main frame and dispose current frame, like what is done in cancel button action listener
        cancelButtonActionPerformed(evt);
    }//GEN-LAST:event_confirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadBackgroundPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadBackgroundPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadBackgroundPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadBackgroundPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadBackgroundPopUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel descriptionText;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel fileFormatText;
    private javax.swing.JLabel fileNameText;
    private javax.swing.JLabel minimumSizeText;
    private javax.swing.JLabel titleText;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
