/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.pop_up;

import backend.entity.Customer;
import backend.entity.Transaction;
import frontend.admin.CustomerCreditDetails;
import frontend.admin.CustomerCreditPanel;
import frontend.admin.MainPage;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;

/**
 *
 * @author limbengrhui
 */
public class TopUpPopUp extends javax.swing.JFrame {

    private Customer currentCustomer;
    
    /**
     * Creates new form TopUpPopUp
     */
    public TopUpPopUp(Customer customer) {
        
        // Initialize data
        currentCustomer = customer;
        
        // Render GUI
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        topUpTitle = new javax.swing.JLabel();
        paymentMethodTitle = new javax.swing.JLabel();
        paymentDropDown = new javax.swing.JComboBox<>(Transaction.PaymentMethod.TOP_UP_METHOD);
        amountTitle = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 251, 233));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topUpTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        topUpTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topUpTitle.setText("Top Up");
        jPanel1.add(topUpTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 200, 60));

        paymentMethodTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        paymentMethodTitle.setText("Select Payment Method");
        jPanel1.add(paymentMethodTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        paymentDropDown.setBackground(Color.WHITE);
        paymentDropDown.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        paymentDropDown.setForeground(new java.awt.Color(204, 204, 204));
        paymentDropDown.setSelectedIndex(-1);
        paymentDropDown.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paymentDropDown.setFocusable(false);
        paymentDropDown.setRenderer(new DefaultListCellRenderer() {

            // Override the rendering method
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {

                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                if (index == -1 && value == null) {
                    label.setText("Select Payment Method");
                    label.setForeground(new Color(204, 204, 204));
                } else {
                    label.setForeground(Color.BLACK);
                }

                // Apply your existing custom rendering (size and border)
                label.setPreferredSize(new Dimension(label.getPreferredSize().width, 40));
                label.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));

                return label;
            }
        });
        paymentDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentDropDownActionPerformed(evt);
            }
        });
        jPanel1.add(paymentDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 340, 50));

        amountTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        amountTitle.setText("Enter Amount (RM)");
        jPanel1.add(amountTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        amountField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        amountField.setForeground(new java.awt.Color(204, 204, 204));
        amountField.setText("Enter Amount in RM");
        amountField.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15)));
        amountField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                amountFieldFocusLost(evt);
            }
        });
        jPanel1.add(amountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 340, 50));

        confirmButton.setBackground(new java.awt.Color(0, 0, 0));
        confirmButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("OK");
        confirmButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        confirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmButton.setFocusPainted(false);
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmButtonMouseExited(evt);
            }
        });
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        jPanel1.add(confirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 160, 50));

        cancelButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.setFocusPainted(false);
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 160, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        // Dispose the current frame
        dispose();
        
        // Enable the parent frame
        MainPage.currentFrame.setEnabled(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered

        // Change the colour of the button
        cancelButton.setBackground(new Color(206, 171, 147));
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited

        // Change the colour of the button
        cancelButton.setBackground(Color.WHITE);
    }//GEN-LAST:event_cancelButtonMouseExited

    private void confirmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseEntered

        // Change the colour of the button
        confirmButton.setBackground(new Color(206, 171, 147));
        
        // Change the text colour
        confirmButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_confirmButtonMouseEntered

    private void confirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseExited

        // Change the colour of the button
        confirmButton.setBackground(Color.BLACK);
        
        // Change the text colour
        confirmButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_confirmButtonMouseExited

    private void paymentDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentDropDownActionPerformed

        // Change the foreground colour
        paymentDropDown.setForeground(Color.BLACK);
    }//GEN-LAST:event_paymentDropDownActionPerformed

    private void amountFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldFocusGained

        // If the prompt is still there
        if (amountField.getText().equals("Enter Amount in RM")) {
            
            // Remove the prompt
            amountField.setText("");
            
            // Change text colour
            amountField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_amountFieldFocusGained

    private void amountFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldFocusLost

        // If the prompt is still there
        if (amountField.getText().equals("")) {
            
            // Remove the prompt
            amountField.setText("Enter Amount in RM");
            
            // Change text colour
            amountField.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_amountFieldFocusLost

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed

        try {
            
            // Retrieve data
            String paymentMethod = paymentDropDown.getSelectedItem().toString();
            double topUpAmount = Double.parseDouble(amountField.getText());
        
            // Perform top up
            int status = currentCustomer.topUpWallet(topUpAmount, paymentMethod);
            
            // Throw exception if the operation is unsuccessful
            switch (status) {
                case 0 -> throw new NumberFormatException();
                case -1, -2, -3 -> throw new IllegalStateException();
            }
            
            // Inform user that top up has been made
            SystemPopUp successMessage = new SystemPopUp(
                    this,
                    "Top Up Successful",
                    String.format("You have top up RM%.2f into the account.", topUpAmount),
                    new String[]{"OK"}
            );
            successMessage.setVisible(true);
            
            // Update the panel
            CustomerCreditPanel.updatePanel();
                    
            // Enable the parent frame
            MainPage.currentFrame.setEnabled(true);
            
            // Dispose this frame
            dispose();
            
        } catch (NumberFormatException ex) {
            
            // Display message to ask user re-input amount
            SystemPopUp numberErrorMessage = new SystemPopUp(
                    this,
                    "Error",
                    "Please insert a valid number that is greater than 0.",
                    new String[]{"OK"}
            );
            numberErrorMessage.setVisible(true);
            
        } catch (NullPointerException ex) {
            
            // Display message to mention about blank inputs
            SystemPopUp nullInputMessage = new SystemPopUp(
                    this,
                    "Error",
                    "Please make sure that all inputs are filled.",
                    new String[]{"OK"}
            );
            nullInputMessage.setVisible(true);
            
        } catch (IllegalStateException ex) {
            
            // Other types of error fall under here
            SystemPopUp unexpectedError = new SystemPopUp(
                    this,
                    "Error",
                    "Unexpected error here. Please inspect code.",
                    new String[]{"OK"}
            );
            unexpectedError.setVisible(true);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TopUpPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TopUpPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TopUpPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TopUpPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Customer customer = new Customer("C001", "abc@mail.com", "Abc@1234", "Jack", "012-3456789", null, 12.34, "Call me");
                new TopUpPopUp(customer).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountTitle;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> paymentDropDown;
    private javax.swing.JLabel paymentMethodTitle;
    private javax.swing.JLabel topUpTitle;
    // End of variables declaration//GEN-END:variables
}
