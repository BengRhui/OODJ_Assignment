/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend.vendor;

import backend.entity.Item;
import backend.entity.Stall;
import frontend.pop_up.HandleItemPopUp;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.ArrayList;

/**
 *
 * @author Xuan Jack (TP067678), Beng Rhui (TP068495)
 */
public class ItemListingPanel extends javax.swing.JPanel {

    private static Stall currentStall;
    private static ArrayList<Item> currentItemList;
    
    /**
     * Creates new form ItemListingPanel
     */
    public ItemListingPanel() {
        
        // Retrieve the current stall
        currentStall = MainPage.getVendor().getStall();
        currentItemList = Item.getItemList(currentStall);
        
        // Renders GUI component
        initComponents();
        
        updatePanes();
    }

    public static void updatePanes() {
        
        itemDetailsContainer.removeAll();
        
        // Retrieve the current list of items
        currentItemList = Item.getItemList(currentStall);
        
        // Determine the size of the panel
        int numOfRows = (int) Math.ceil(currentItemList.size() / 3.0);
        int containerWidth = 3 * 400 + 2 * 25;
        int containerHeight = (numOfRows - 1) * 10 + numOfRows * 400;
        
        // Set the size of the panel
        itemDetailsContainer.setPreferredSize(new Dimension(containerWidth, containerHeight));
        
        for (Item item : currentItemList) {
            ItemDetailsPanel itemPanel = new ItemDetailsPanel(item, true, true);
            itemDetailsContainer.add(itemPanel);
        }
        
        itemDetailsContainer.revalidate();
        itemDetailsContainer.repaint();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemListingTitle = new javax.swing.JLabel();
        addItemButton = new javax.swing.JButton();
        itemDetailScrollPane = new javax.swing.JScrollPane() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        itemDetailsContainer = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        }
        ;

        setBackground(new java.awt.Color(255, 251, 233));
        setName("itemListingPanel"); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemListingTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        itemListingTitle.setText("ITEM LISTING");
        add(itemListingTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 260, 60));

        addItemButton.setBackground(new java.awt.Color(0, 0, 0));
        addItemButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addItemButton.setForeground(new java.awt.Color(255, 255, 255));
        addItemButton.setText("+ Add New Item");
        addItemButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        addItemButton.setContentAreaFilled(false);
        addItemButton.setFocusPainted(false);
        addItemButton.setFocusable(false);
        addItemButton.setOpaque(true);
        addItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addItemButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addItemButtonMouseExited(evt);
            }
        });
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });
        add(addItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 60, 310, 60));

        itemDetailScrollPane.setBackground(new Color(0, 0, 0, 0));
        itemDetailScrollPane.setBorder(null);
        itemDetailScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        itemDetailScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        itemDetailScrollPane.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemDetailScrollPane.setMinimumSize(new java.awt.Dimension(1270, 460));
        itemDetailScrollPane.setOpaque(false);
        itemDetailScrollPane.getViewport().setOpaque(false);
        itemDetailScrollPane.setPreferredSize(new java.awt.Dimension(1270, 460));

        itemDetailsContainer.setBackground(new Color(0, 0, 0, 0));
        itemDetailsContainer.setOpaque(false);
        itemDetailsContainer.setLayout(new java.awt.GridLayout(0, 3, 35, 25));
        itemDetailScrollPane.setViewportView(itemDetailsContainer);

        add(itemDetailScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 1270, 400));
    }// </editor-fold>//GEN-END:initComponents

    private void addItemButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addItemButtonMouseEntered

        // Change cursor
        addItemButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // Change the colour of the button
        addItemButton.setBackground(new Color(227, 202, 165));
        addItemButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_addItemButtonMouseEntered

    private void addItemButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addItemButtonMouseExited

        // Change cursor
        addItemButton.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // Change the colour of the button
        addItemButton.setBackground(Color.BLACK);
        addItemButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_addItemButtonMouseExited

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed

        // Show the pop up to add items
        HandleItemPopUp addItemPopUp = new HandleItemPopUp(
                MainPage.currentFrame,
                null,
                HandleItemPopUp.ADD_ITEMS
        );
        addItemPopUp.setVisible(true);
        addItemPopUp.setLocationRelativeTo(MainPage.currentFrame);
        
        // Disable the current frame
        MainPage.currentFrame.setEnabled(false);
    }//GEN-LAST:event_addItemButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JScrollPane itemDetailScrollPane;
    private static javax.swing.JPanel itemDetailsContainer;
    private javax.swing.JLabel itemListingTitle;
    // End of variables declaration//GEN-END:variables
}
