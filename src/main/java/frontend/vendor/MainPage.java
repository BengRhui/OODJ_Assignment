/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.vendor;

import backend.entity.Stall;
import backend.entity.Vendor;
import backend.file_io.PictureIO;
import frontend.pop_up.NotificationPopUp;
import frontend.pop_up.UploadBackgroundPopUp;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author limbengrhui
 */
public class MainPage extends javax.swing.JFrame {

    public static JFrame currentFrame;
    private static Vendor currentVendor;
    private static String currentCard;
    
    /**
     * Creates new form VendorMainPage
     */
    public MainPage() {

        // Set the current frame
        currentFrame = this;
        
        // A temporary variable for development purpose
        currentVendor = new Vendor("V001", "vendor@mail.com", "Mno@3456", "Muhammad Abdul Ali bin Ahmad Ghazali", new Stall("S001", "Big Fish and Chips Western", new Stall.StallCategories[]{Stall.StallCategories.LOCAL, Stall.StallCategories.WESTERN, Stall.StallCategories.HALAL}));
        initComponents();
        
        // Add cards into the current frame
        HomePagePanel homePagePanel = new HomePagePanel();
        ItemListingPanel itemListingPanel = new ItemListingPanel();
        OrderHistoryPanel orderHistoryPanel = new OrderHistoryPanel();
        
        cardPanel.add(homePagePanel, "homePagePanel");
        cardPanel.add(itemListingPanel, "itemListingPanel");
        cardPanel.add(orderHistoryPanel, "orderHistoryPanel");
        
        // Display home page as default
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardLayout.show(cardPanel, "homePagePanel");
        currentCard = "homePagePanel";
    }
    
    /**
     * This method is to let other frames to bring in the vendor information.
     * @param vendor The vendor object retrieved via login
     */
    public static void setVendor(Vendor vendor) {
        currentVendor = vendor;
    }
    
    /**
     * This method is to let other frames to retrieve the current vendor.
     * @return The vendor object that is logged into the system
     */
    public static Vendor getVendor() {
        return currentVendor;
    }
    
    /**
     * This method is to help update the background of the current frame after uploading.
     */
    public static void updateBackground() {
        
        try {
            
            // Use image IO to read the image file to avoid cache
            BufferedImage image = ImageIO.read(new File(PictureIO.retrieveBackgroundPicture(currentVendor).getAbsolutePath()));
            ImageIcon updatedBackground = new ImageIcon(image);

            // Change the background
            vendorBackground.setIcon(updatedBackground);

            // Make sure that everything is refreshed when updating the background
            backgroundPanel.revalidate();
            backgroundPanel.repaint();
            
        } catch (IOException ex) {
            
            // Indicate error when there is an IO exception
            System.out.println("Error in updating background pictures for vendor.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        basePanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                g.setColor(getBackground());
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        }
        ;
        headerPanel = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        logoPictureLabel = new javax.swing.JLabel();
        homePageLabel = new javax.swing.JLabel();
        itemListingLabel = new javax.swing.JLabel();
        orderHistoryLabel = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        notificationIcon = new javax.swing.JLabel();
        addBackgroundIcon = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        vendorBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Food Court System");
        setMinimumSize(new java.awt.Dimension(1400, 800));
        setName("vendorMainFrame"); // NOI18N
        setSize(new java.awt.Dimension(1400, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        basePanel.setBackground(new java.awt.Color(0, 0, 0, 150));
        basePanel.setOpaque(false);
        basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new Color(0, 0, 0, 0));
        headerPanel.setOpaque(false);
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logo_light_without_text.png"))); // NOI18N
        headerPanel.add(logoPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        homePageLabel.setBackground(new Color(0, 0, 0, 0));
        homePageLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        homePageLabel.setForeground(new java.awt.Color(255, 255, 255));
        homePageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePageLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homePageLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homePageLabelMouseExited(evt);
            }
        });
        headerPanel.add(homePageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 140, 30));

        itemListingLabel.setBackground(new Color(0, 0, 0, 0));
        itemListingLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        itemListingLabel.setForeground(new java.awt.Color(255, 255, 255));
        itemListingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        itemListingLabel.setText("Item Listing");
        itemListingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemListingLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                itemListingLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                itemListingLabelMouseExited(evt);
            }
        });
        headerPanel.add(itemListingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 140, 30));

        orderHistoryLabel.setBackground(new Color(0, 0, 0, 0));
        orderHistoryLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        orderHistoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        orderHistoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                orderHistoryLabelMouseExited(evt);
            }
        });
        headerPanel.add(orderHistoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, 160, 30));

        logoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logout_icon.png"))); // NOI18N
        logoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutIconMouseExited(evt);
            }
        });
        headerPanel.add(logoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 50, 60, 60));

        notificationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/notification_icon.png"))); // NOI18N
        notificationIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                notificationIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                notificationIconMouseExited(evt);
            }
        });
        headerPanel.add(notificationIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 50, -1, -1));

        addBackgroundIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/customize_image_icon.png"))); // NOI18N
        addBackgroundIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBackgroundIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBackgroundIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBackgroundIconMouseExited(evt);
            }
        });
        headerPanel.add(addBackgroundIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 50, -1, -1));

        basePanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 150));

        cardPanel.setBackground(new Color(0, 0, 0, 0));
        cardPanel.setOpaque(false);
        cardPanel.setLayout(new java.awt.CardLayout());
        basePanel.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1400, 650));

        backgroundPanel.add(basePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        vendorBackground.setIcon(new ImageIcon(
            PictureIO.retrieveBackgroundPicture(
                currentVendor
            ).getAbsolutePath()
        ));
        vendorBackground.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        vendorBackground.setOpaque(true);
        backgroundPanel.add(vendorBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 500));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homePageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseClicked
                
        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to item listing card
        cardLayout.show(cardPanel, "homePagePanel");
        currentCard = "homePagePanel";
        
        // Change formatting for the text
        homePageLabel.setText("<html><u>Home Page</u></html>");
        homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));
        
        itemListingLabel.setText("Item Listing");
        itemListingLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_homePageLabelMouseClicked

    private void itemListingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemListingLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to item listing card
        cardLayout.show(cardPanel, "itemListingPanel");
        currentCard = "itemListingPanel";
        
        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        itemListingLabel.setText("<html><u>Item Listing</u></html>");
        itemListingLabel.setFont(new Font("Arial", Font.BOLD, 24));
        
        orderHistoryLabel.setText("Order History");
        orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_itemListingLabelMouseClicked

    private void orderHistoryLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to item listing card
        cardLayout.show(cardPanel, "orderHistoryPanel");
        currentCard = "orderHistoryPanel";
        
        // Change formatting for the text
        homePageLabel.setText("Home Page");
        homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        itemListingLabel.setText("Item Listing");
        itemListingLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        orderHistoryLabel.setText("<html><u>Order History</u></html>");
        orderHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));
    }//GEN-LAST:event_orderHistoryLabelMouseClicked

    private void homePageLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseEntered
        
        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePagePanel")) {
            
            // Bold the text
            homePageLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseEntered

    private void homePageLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageLabelMouseExited

        // Set cursor
        homePageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("homePagePanel")) {
            
            // Reset the text
            homePageLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_homePageLabelMouseExited

    private void itemListingLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemListingLabelMouseEntered

        // Set cursor
        itemListingLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("itemListingPanel")) {
            
            // Bold the text
            itemListingLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_itemListingLabelMouseEntered

    private void itemListingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemListingLabelMouseExited

        // Set cursor
        itemListingLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("itemListingPanel")) {
            
            // Reset the text
            itemListingLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_itemListingLabelMouseExited

    private void orderHistoryLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseEntered

        // Set cursor
        orderHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not order history page
        if (!currentCard.equals("orderHistoryPanel")) {
            
            // Bold the text
            orderHistoryLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_orderHistoryLabelMouseEntered

    private void orderHistoryLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryLabelMouseExited

        // Set cursor
        orderHistoryLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not order history page
        if (!currentCard.equals("orderHistoryPanel")) {
            
            // Reset the text
            orderHistoryLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_orderHistoryLabelMouseExited

    private void addBackgroundIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBackgroundIconMouseEntered

        // Set cursor
        addBackgroundIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addBackgroundIconMouseEntered

    private void addBackgroundIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBackgroundIconMouseExited

        // Set cursor
        addBackgroundIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_addBackgroundIconMouseExited

    private void notificationIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseEntered

        // Set cursor
        notificationIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_notificationIconMouseEntered

    private void notificationIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseExited

        // Set cursor
        notificationIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_notificationIconMouseExited

    private void logoutIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseEntered

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_logoutIconMouseEntered

    private void logoutIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseExited

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_logoutIconMouseExited

    private void addBackgroundIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBackgroundIconMouseClicked
        
        // Call the upload background picture pop up
        UploadBackgroundPopUp uploadBackgroundPopUp = new UploadBackgroundPopUp();
        uploadBackgroundPopUp.setVisible(true);
        uploadBackgroundPopUp.setLocationRelativeTo(this);
        
        // Disable the current frame
        setEnabled(false);
    }//GEN-LAST:event_addBackgroundIconMouseClicked

    private void notificationIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationIconMouseClicked

        // Call the notification frame
        NotificationPopUp vendorNotification = new NotificationPopUp(currentVendor);
        vendorNotification.setVisible(true);
        vendorNotification.setLocationRelativeTo(this);
    }//GEN-LAST:event_notificationIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addBackgroundIcon;
    private static javax.swing.JPanel backgroundPanel;
    private static javax.swing.JPanel basePanel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel homePageLabel;
    private javax.swing.JLabel itemListingLabel;
    private javax.swing.JLabel logoPictureLabel;
    private javax.swing.JLabel logoutIcon;
    private javax.swing.JLabel notificationIcon;
    private javax.swing.JLabel orderHistoryLabel;
    private static javax.swing.JLabel vendorBackground;
    // End of variables declaration//GEN-END:variables
}
