/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.manager;

import backend.entity.DeliveryRunner;
import backend.entity.Order;
import backend.entity.Order.OrderStatus;
import backend.entity.Stall;
import backend.entity.User;
import backend.entity.Vendor;
import backend.utility.Utility.TimeframeFilter;
import frontend.pop_up.TimeFramePopUp;
import frontend.utility.Graph;
import java.util.ArrayList;
import java.util.stream.Collectors;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Chun Ming (TP068983), Beng Rhui (TP068495)
 */
public class UserOverviewPopUp extends javax.swing.JFrame {

    public static JFrame currentFrame;
    private User currentUser;
    private TimeframeFilter filterApplied;
    
    /**
     * Creates new form UserOverviewPopUp
     */
    public UserOverviewPopUp(User user) {
        
        // Set current user
        currentUser = user;
        filterApplied = TimeframeFilter.DAILY;
        
        // Set current frame
        currentFrame = this;
        
        // Render GUI components
        initComponents();

        // Remove icon to item panel if its runner
        if (currentUser instanceof DeliveryRunner) containerPanel.remove(itemIcon);
        
        // Initialize panels
        updatePanels();
    }
    
    public void setFilterApplied(TimeframeFilter filter) {
        filterApplied = filter;
    }
    
    public void updatePanels() {

        // Remove the components of the panel
        graphPanel.removeAll();
        
        // Determine the user involved
        switch (currentUser) {
            
            // If it's vendor
            case Vendor vendor -> {
                
                // Retrieve the orders
                ArrayList<Order> filteredList = Order.filterOrder(vendor, filterApplied).stream()
                        .filter(order -> order.getOrderStatus() == OrderStatus.COMPLETED)
                        .collect(Collectors.toCollection(ArrayList::new));
                
                // Update graph
                JPanel graph = new Graph(
                        filteredList,
                        Graph.REVENUE_GRAPH,
                        filterApplied,
                        620,
                        440
                );
                graph.setLocation(10, 15);
                graphPanel.add(graph);
                
                // Update total order, earnings and overall ratings
                totalCountField.setText(String.valueOf(vendor.getOrderCount(filterApplied)));
                totalEarningsLabel.setText(String.format("RM%.2f", vendor.getTotalEarnings(filterApplied)));
                overallRatingsLabel.setText(vendor.getOverallRatings(filterApplied) == -1.0 ? "-" : String.valueOf(vendor.getOverallRatings(filterApplied)));
            }
            
            // If delivery runner is involved
            case DeliveryRunner runner -> {
                
                // Retrieve orders
                ArrayList<Order> filteredList = Order.filterOrder(runner, filterApplied).stream()
                        .filter(order -> order.getOrderStatus() == OrderStatus.COMPLETED)
                        .collect(Collectors.toCollection(ArrayList::new));
                
                // Update graph
                JPanel graph = new Graph(
                        filteredList,
                        Graph.DELIVERY_COUNT_GRAPH,
                        filterApplied,
                        620,
                        440
                );
                graph.setLocation(10, 15);
                graphPanel.add(graph);
                
                // Update total order, earnings and overall ratings
                totalCountField.setText(String.valueOf(runner.getDeliveryCount(filterApplied)));
                totalEarningsLabel.setText(String.format("RM%.2f", runner.getTipsAmount(filterApplied)));
                overallRatingsLabel.setText(runner.getRatings(filterApplied) == -1.0 ? "-" : String.valueOf(runner.getRatings(filterApplied)));
            }
            
            // For any other users (should not happen but just included in case)
            default -> throw new IllegalStateException("Invalid user type. Please inspect code.");
        }
        
        // Refresh panel
        graphPanel.revalidate();
        graphPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPanel = new javax.swing.JPanel();
        panelTitle = new javax.swing.JLabel();
        graphTitle = new javax.swing.JLabel();
        filterIcon = new javax.swing.JLabel();
        graphPanel = new javax.swing.JPanel();
        totalCountPanel = new javax.swing.JPanel();
        totalCountTitle = new javax.swing.JLabel();
        totalCountField = new javax.swing.JLabel();
        totalEarningsPanel = new javax.swing.JPanel();
        totalEarningsTitle = new javax.swing.JLabel();
        totalEarningsLabel = new javax.swing.JLabel();
        overallRatingsPanel = new javax.swing.JPanel();
        overallRatingsTItle = new javax.swing.JLabel();
        overallRatingsLabel = new javax.swing.JLabel();
        itemIcon = new javax.swing.JLabel();
        closeIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Performance Overview");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        containerPanel.setBackground(new java.awt.Color(255, 251, 233));
        containerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelTitle.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        panelTitle.setText("Overview for " +
            (currentUser instanceof Vendor ? "Vendor " : "Runner ") +
            currentUser.getUserID());
        containerPanel.add(panelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 490, 50));

        graphTitle.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        graphTitle.setText(currentUser instanceof Vendor ? "Revenue" : "Delivery Count");
        containerPanel.add(graphTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 350, 50));

        filterIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/customize_icon.png"))); // NOI18N
        filterIcon.setText("jLabel5");
        filterIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filterIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterIconMouseClicked(evt);
            }
        });
        containerPanel.add(filterIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, 70, 50));

        graphPanel.setBackground(new java.awt.Color(255, 255, 255));
        graphPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        containerPanel.add(graphPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 640, 460));

        totalCountPanel.setBackground(new java.awt.Color(227, 202, 165));
        totalCountPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        totalCountPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        totalCountTitle.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        totalCountTitle.setText(currentUser instanceof Vendor ? "Total Order" : "Total Delivery");
        totalCountPanel.add(totalCountTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        totalCountField.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        totalCountField.setText("253");
        totalCountPanel.add(totalCountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 370, 60));

        containerPanel.add(totalCountPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 130, 420, 160));

        totalEarningsPanel.setBackground(new java.awt.Color(227, 202, 165));
        totalEarningsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        totalEarningsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        totalEarningsTitle.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        totalEarningsTitle.setText(currentUser instanceof Vendor ? "Total Earnings" : "Total Tips");
        totalEarningsPanel.add(totalEarningsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        totalEarningsLabel.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        totalEarningsLabel.setText("RM12650");
        totalEarningsPanel.add(totalEarningsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 370, 60));

        containerPanel.add(totalEarningsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 310, 420, 160));

        overallRatingsPanel.setBackground(new java.awt.Color(227, 202, 165));
        overallRatingsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        overallRatingsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        overallRatingsTItle.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        overallRatingsTItle.setText("Overall Ratings");
        overallRatingsPanel.add(overallRatingsTItle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        overallRatingsLabel.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        overallRatingsLabel.setText("4.9");
        overallRatingsPanel.add(overallRatingsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 90, 60));

        containerPanel.add(overallRatingsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 490, 420, 160));

        itemIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/item_icon.png"))); // NOI18N
        itemIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        itemIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemIconMouseClicked(evt);
            }
        });
        containerPanel.add(itemIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 50, 60, 50));

        closeIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/cancel_icon.png"))); // NOI18N
        closeIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeIconMouseClicked(evt);
            }
        });
        containerPanel.add(closeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 50, 50, 50));

        getContentPane().add(containerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeIconMouseClicked
        
        // Enable the parent frame
        MainPage.currentFrame.setEnabled(true);
        
        // Dispose the current frame
        dispose();
    }//GEN-LAST:event_closeIconMouseClicked

    private void filterIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterIconMouseClicked
        
        TimeFramePopUp timeframePopUp = new TimeFramePopUp(
                this,
                filterApplied
        );
        timeframePopUp.setVisible(true);
        
        filterApplied = timeframePopUp.getFilter();
        updatePanels();
    }//GEN-LAST:event_filterIconMouseClicked

    private void itemIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemIconMouseClicked

        Vendor vendor = (Vendor) currentUser;
        ItemPanel newItemPanel = new ItemPanel(vendor);
        newItemPanel.setVisible(true);
        newItemPanel.setLocationRelativeTo(this);
        
        setEnabled(false);
    }//GEN-LAST:event_itemIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserOverviewPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserOverviewPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserOverviewPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserOverviewPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Stall stall = new Stall("S001", "ABC", new Stall.StallCategories[]{Stall.StallCategories.WESTERN});
                Vendor vendor = new Vendor("V003", "testing@mail.com", "Abc@1234", "Testing", stall);
                new UserOverviewPopUp(vendor).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closeIcon;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JLabel filterIcon;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel graphTitle;
    private javax.swing.JLabel itemIcon;
    private javax.swing.JLabel overallRatingsLabel;
    private javax.swing.JPanel overallRatingsPanel;
    private javax.swing.JLabel overallRatingsTItle;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JLabel totalCountField;
    private javax.swing.JPanel totalCountPanel;
    private javax.swing.JLabel totalCountTitle;
    private javax.swing.JLabel totalEarningsLabel;
    private javax.swing.JPanel totalEarningsPanel;
    private javax.swing.JLabel totalEarningsTitle;
    // End of variables declaration//GEN-END:variables
}
