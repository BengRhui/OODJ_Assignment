/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend.manager;

import frontend.home_page.HomePage;
import frontend.pop_up.SystemPopUp;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import javax.swing.JFrame;

/**
 *
 * @author Chun Ming (TP068983), Beng Rhui (TP068495)
 */
public class MainPage extends javax.swing.JFrame {

    public static JFrame currentFrame;
    private static String currentCard;
    
    /**
     * Creates new form RunnerMainPage
     */
    public MainPage() {

        // Set the current frame
        currentFrame = this;
        
        // Render GUI components
        initComponents();
        
        // Add cards into the current frame
        DashboardPanel dashboardPanel = new DashboardPanel();
        VendorPanel vendorPanel = new VendorPanel();
        RunnerPanel runnerPanel = new RunnerPanel();
        FeedbackPanel feedbackPanel = new FeedbackPanel();
        
        cardPanel.add(dashboardPanel, "dashboardPanel");
        cardPanel.add(vendorPanel, "vendorPanel");
        cardPanel.add(runnerPanel, "runnerPanel");
        cardPanel.add(feedbackPanel, "feedbackPanel");
        
        // Display home page as default
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        cardLayout.show(cardPanel, "dashboardPanel");
        currentCard = "dashboardPanel";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        basePanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                g.setColor(getBackground());
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        }
        ;
        headerPanel = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        logoPictureLabel = new javax.swing.JLabel();
        dashboardLabel = new javax.swing.JLabel();
        vendorLabel = new javax.swing.JLabel();
        runnerLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        logoutIcon = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
            }
        };
        runnerBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Food Court System");
        setMinimumSize(new java.awt.Dimension(1400, 800));
        setName("vendorMainFrame"); // NOI18N
        setSize(new java.awt.Dimension(1400, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        basePanel.setBackground(new java.awt.Color(0, 0, 0, 150));
        basePanel.setOpaque(false);
        basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new Color(0, 0, 0, 0));
        headerPanel.setOpaque(false);
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logo_light_without_text.png"))); // NOI18N
        headerPanel.add(logoPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        dashboardLabel.setBackground(new Color(0, 0, 0, 0));
        dashboardLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        dashboardLabel.setForeground(new java.awt.Color(255, 255, 255));
        dashboardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboardLabel.setText("<html><u>Dashboard</u></html>");
        dashboardLabel.setToolTipText("");
        dashboardLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dashboardLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dashboardLabelMouseExited(evt);
            }
        });
        headerPanel.add(dashboardLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 140, 30));

        vendorLabel.setBackground(new Color(0, 0, 0, 0));
        vendorLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        vendorLabel.setForeground(new java.awt.Color(255, 255, 255));
        vendorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vendorLabel.setText("Vendor");
        vendorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendorLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vendorLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vendorLabelMouseExited(evt);
            }
        });
        headerPanel.add(vendorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 100, 30));

        runnerLabel.setBackground(new Color(0, 0, 0, 0));
        runnerLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        runnerLabel.setForeground(new java.awt.Color(255, 255, 255));
        runnerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        runnerLabel.setText("Delivery Runner");
        runnerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runnerLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                runnerLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                runnerLabelMouseExited(evt);
            }
        });
        headerPanel.add(runnerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 200, 30));

        feedbackLabel.setBackground(new Color(0, 0, 0, 0));
        feedbackLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        feedbackLabel.setForeground(new java.awt.Color(255, 255, 255));
        feedbackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackLabel.setText("Feedback");
        feedbackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                feedbackLabelMouseExited(evt);
            }
        });
        headerPanel.add(feedbackLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 120, 30));

        logoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/logout_icon.png"))); // NOI18N
        logoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutIconMouseExited(evt);
            }
        });
        headerPanel.add(logoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 50, 60, 60));

        basePanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 150));

        cardPanel.setBackground(new Color(0, 0, 0, 0));
        cardPanel.setOpaque(false);
        cardPanel.setLayout(new java.awt.CardLayout());
        basePanel.add(cardPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1400, 650));

        backgroundPanel.add(basePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        runnerBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/system/manager_background.jpg"))); // NOI18N
        runnerBackground.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        runnerBackground.setOpaque(true);
        backgroundPanel.add(runnerBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 150));

        getContentPane().add(backgroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLabelMouseClicked
        
        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to dashboard card
        cardLayout.show(cardPanel, "dashboardPanel");
        currentCard = "dashboardPanel";
        
        // Change formatting for the text
        dashboardLabel.setText("<html><u>Dashboard</u></html>");
        dashboardLabel.setFont(new Font("Arial", Font.BOLD, 24));

        vendorLabel.setText("Vendor");
        vendorLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        runnerLabel.setText("Delivery Runner");
        runnerLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_dashboardLabelMouseClicked

    private void vendorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();

        // Switch to vendor card
        cardLayout.show(cardPanel, "vendorPanel");
        currentCard = "vendorPanel";

        // Change formatting for the text
        dashboardLabel.setText("Dashboard");
        dashboardLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        vendorLabel.setText("<html><u>Vendor</u></html>");
        vendorLabel.setFont(new Font("Arial", Font.BOLD, 24));

        runnerLabel.setText("Delivery Runner");
        runnerLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_vendorLabelMouseClicked

    private void runnerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runnerLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();

        // Switch to runner card
        cardLayout.show(cardPanel, "runnerPanel");
        currentCard = "runnerPanel";

        // Change formatting for the text
        dashboardLabel.setText("Dashboard");
        dashboardLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        vendorLabel.setText("Vendor");
        vendorLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        runnerLabel.setText("<html><u>Delivery Runner</u></html>");
        runnerLabel.setFont(new Font("Arial", Font.BOLD, 24));

        feedbackLabel.setText("Feedback");
        feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
    }//GEN-LAST:event_runnerLabelMouseClicked

    private void feedbackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseClicked

        // Get the layout
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        
        // Switch to feedback card
        cardLayout.show(cardPanel, "feedbackPanel");
        currentCard = "feedbackPanel";
        
        // Change formatting for the text
        dashboardLabel.setText("Dashboard");
        dashboardLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        vendorLabel.setText("Vendor");
        vendorLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        runnerLabel.setText("Delivery Runner");
        runnerLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        feedbackLabel.setText("<html><u>Feedback</u></html>");
        feedbackLabel.setFont(new Font("Arial", Font.BOLD, 24));
    }//GEN-LAST:event_feedbackLabelMouseClicked

    private void dashboardLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLabelMouseEntered
        
        // Set cursor
        dashboardLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("dashboardPanel")) {
            
            // Bold the text
            dashboardLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_dashboardLabelMouseEntered

    private void dashboardLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLabelMouseExited

        // Set cursor
        dashboardLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("dashboardPanel")) {
            
            // Reset the text
            dashboardLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_dashboardLabelMouseExited

    private void vendorLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorLabelMouseEntered

        // Set cursor
        vendorLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("vendorPanel")) {
            
            // Bold the text
            vendorLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_vendorLabelMouseEntered

    private void vendorLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorLabelMouseExited

        // Set cursor
        vendorLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("vendorPanel")) {
            
            // Reset the text
            vendorLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_vendorLabelMouseExited

    private void runnerLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runnerLabelMouseEntered

        // Set cursor
        runnerLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("runnerPanel")) {
            
            // Bold the text
            runnerLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_runnerLabelMouseEntered

    private void runnerLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runnerLabelMouseExited

        // Set cursor
        runnerLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not home page
        if (!currentCard.equals("runnerPanel")) {
            
            // Reset the text
            runnerLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_runnerLabelMouseExited
    
    private void feedbackLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseEntered

        // Set cursor
        feedbackLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("feedbackPanel")) {
            
            // Bold the text
            feedbackLabel.setFont(new Font("Arial", Font.BOLD, 24));
        }
    }//GEN-LAST:event_feedbackLabelMouseEntered

    private void feedbackLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackLabelMouseExited

        // Set cursor
        feedbackLabel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        // If the current card is not item listing page
        if (!currentCard.equals("feedbackPanel")) {
            
            // Reset the text
            feedbackLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        }
    }//GEN-LAST:event_feedbackLabelMouseExited

    private void logoutIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseEntered

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_logoutIconMouseEntered

    private void logoutIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseExited

        // Set cursor
        logoutIcon.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_logoutIconMouseExited

    private void logoutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutIconMouseClicked

        // Display a messsage to confirm logout
        SystemPopUp logoutConfirmation = new SystemPopUp(
                this,
                "Logout from System",
                "Are you sure you wish to logout from the system?",
                new String[]{"No", "Yes"}
        );
        logoutConfirmation.setVisible(true);
        
        // Get the status of the notification
        int status = logoutConfirmation.getStatus();
        
        // If "Yes" is chosen
        if (status == 1) {
            
            // Display a message to indicate that logout is successful
            SystemPopUp successLogout = new SystemPopUp(
                this,
                "Logout Success",
                "Thank you for using the system!",
                new String[]{"OK"}
            );
            successLogout.setVisible(true);
            
            // Redirect users to home page
            HomePage homePage = new HomePage();
            homePage.setVisible(true);
            homePage.setLocationRelativeTo(this);
            
            // Dispose the current frame
            dispose();
        }
    }//GEN-LAST:event_logoutIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel backgroundPanel;
    private static javax.swing.JPanel basePanel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel dashboardLabel;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel logoPictureLabel;
    private javax.swing.JLabel logoutIcon;
    private static javax.swing.JLabel runnerBackground;
    private javax.swing.JLabel runnerLabel;
    private javax.swing.JLabel vendorLabel;
    // End of variables declaration//GEN-END:variables
}
